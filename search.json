[{"title":"React Native 搭配 MobX 使用心得","date":"2021-09-09T02:56:39.000Z","url":"/2021/09/09/React-Native-%E6%90%AD%E9%85%8D-MobX-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/","tags":[["react-native","/tags/react-native/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"React Native 使用 MobXMobX 是一个用于状态管理的Javascript库，它通过运用透明的函数式响应编程（Transparent Functional Reactive Programming，TFRP）使状态管理变得简单和可扩展，与React Native一起使用效果很好。 安装 Mobx 和 Mobx-reactMobx 是主要的库，而 mobx-react 具有用于 react 的 mobx 绑定。使用以下命令安装 Mobx 和 Mobx-react： 启用 Mobx 装饰器语法你也可以在没有装饰器语法的情况下使用 Mobx，但是使用装饰器可以简化代码，所以让我们启用它。 使用以下命令为装饰器安装 babel 插件： 并在 .babelrc文件中启用（注意，插件的顺序很重要）： 如何使用React上下文设置 Mobx让我们看看如何使用 react 和 react 上下文来设置 Mobx。 什么是react上下文？Context 提供了一种通过组件树传递数据的方法，而无需在每个级别手动向下传递 props。简单来说，React 上下文用于将一些数据存储在一个地方并在整个应用程序中使用它。每次修改上下文中的数据时，组件也会重新渲染。如果我们不使用上下文，那么我们将使用 props 手动传递数据。 从技术上讲，Mobx 和其他状态管理库也做同样的事情，但功能更多 设置一个基本的 Mobx store转到react native程序中的 src 文件夹，创建一个名为的文件夹services并创建一个名为的文件store.js 转到新创建的store.js文件并粘贴以下代码 store说明它是一个非常简单的存储，带有一个用于存储用户数据的用户对象、一个标题字符串、一些修改用户和标题的函数。**@observable用于告诉 mobx 在修改 observable 属性时重新渲染组件。** @action是一个用于修改 observable 的函数。运行一个@actions也会触发autoRun如果您设置了其中任何一个，函数。 useStore 是我们的自定义钩子，用于在任何功能组件中使用 mobx 存储 withStore 是一个自定义 HOC（高阶组件），可以在任何类组件中使用 mobx 存储。 Mobx 使用转到App.js Home.js 功能组件使用 useStore 钩子"},{"title":"Android打包混淆出现java.lang.OutOfMemoryError: Java heap space","date":"2021-09-08T02:56:42.000Z","url":"/2021/09/08/Android%E6%89%93%E5%8C%85%E6%B7%B7%E6%B7%86%E5%87%BA%E7%8E%B0java-lang-OutOfMemoryError-Java-heap-space/","tags":[["Android","/tags/Android/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"配置gradle.properties "},{"title":"系统签名app运行webview闪退问题","date":"2021-09-08T02:40:14.000Z","url":"/2021/09/08/%E7%B3%BB%E7%BB%9F%E7%AD%BE%E5%90%8Dapp%E8%BF%90%E8%A1%8Cwebview%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/","tags":[["Android","/tags/Android/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":" 开发定制Android系统应用时，系统签名后app闪退 java.lang.UnsupportedOperationException: For security reasons, WebView is not allowed in privileged processes "},{"title":"iOS 启动图尺寸适配","date":"2021-09-08T02:02:08.000Z","url":"/2021/09/08/iOS-%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%B0%BA%E5%AF%B8%E9%80%82%E9%85%8D/","tags":[["iOS","/tags/iOS/"],["Android","/tags/Android/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":" 在 iOS 开发早期，启动图适配，可以通过自定义 LaunchImage 通过设置多张图片来实现通过尺寸的适配，2020 年 4 月开始，所有使用 iOS 13 SDK 的 App 都必须提供 LaunchScreen 如果使用 LaunchScreen 一张图来适配所有尺寸的 iPhone 是一定不够的，不同程度的拉伸是不可避免的，解决办法 👇 方法一 LaunchScreen 中写自定义布局，把 LaunchScreen 当做一个页面，里面不仅仅可以放图片，也来用来放其他 view,这样，重新布局，来实现我们想要的启动页就很容易实现了，这种也是官方推荐的方法 方法二 仍然使用类似于 LaunchImage 的方法来实现，通过配置多张图片的方式，来达到多图适配的问题 在 Assets.xcasset 中新建一个 Image Set，并配置 拷贝如下 xml 内容到 Contents.json 中,并配置尺寸的图片到指定位置，设置只支持 iPhone 图片 3.设置好后，把图片加入到 LaunchImage 中，设置好约束，并把 contentMode 设置为Scale to Fill 删除 app 重新运行就能看到效果了。 记录一下 Android 启动图尺寸 "},{"title":"android 多个图表闪退","date":"2021-09-07T10:56:54.000Z","url":"/2021/09/07/android-%E5%A4%9A%E4%B8%AA%E5%9B%BE%E8%A1%A8%E9%97%AA%E9%80%80/","tags":[["react-native","/tags/react-native/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":""},{"title":"Mac sourcetree自动添加ssh key","date":"2021-09-07T10:23:12.000Z","url":"/2021/09/07/Mac-sourcetree%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0ssh-key/","tags":[["SourceTree","/tags/SourceTree/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":" config "},{"title":"react-native修改第三方包","date":"2021-09-07T10:18:07.583Z","url":"/2021/09/07/react-native%E4%BF%AE%E6%94%B9%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85/","tags":[["react-native","/tags/react-native/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"使用第三方包的时候，经常需要修改内部源码来解决 bug 和实现效果，然而每次 yarn、npm install 之后，修改的代码又会被覆盖，让人抓狂，下面介绍一个好用的方法 👇 使用工具：patch-package 用法修改 package.json,添加 &quot;postinstall&quot;: &quot;patch-package&quot; 执行 yarn add patch-package postinstall-postinstall -D 修改第三方库后， 应用补丁 "},{"title":"yarn的常用命令","date":"2021-09-07T09:27:54.000Z","url":"/2021/09/07/yarn%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","tags":[["yarn","/tags/yarn/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"yarn 安装npm i yarn -g 查看版本yarn -v 新建 package.jsonyarn init 添加依赖通过 yarn add 添加依赖会更新 package.json 以及 yarn.lock 文件 1.开发环境 2.生产环境 3.全局 更新 移除 安装 运行脚本 显示包信息 列出所有依赖 管理 yarn 配置文件 缓存"},{"title":"iOS 开发解决dyld: Library not loaded: @rpath/xxx.framework/ ","date":"2021-09-07T09:06:20.000Z","url":"/2021/09/07/iOS-%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3dyld-Library-not-loaded-rpath-xxx-framework/","tags":[["iOS","/tags/iOS/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":"最近使用百度人脸采集 sdk 时运行报错 解决办法 "},{"title":"react-native-webview禁止缩放和自适应高度","date":"2021-09-07T08:04:33.000Z","url":"/2021/09/07/react-native-webview%E7%A6%81%E6%AD%A2%E7%BC%A9%E6%94%BE%E5%92%8C%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6/","tags":[["react-native","/tags/react-native/"]],"categories":[["技术","/categories/%E6%8A%80%E6%9C%AF/"]],"content":""},{"title":"friends","date":"2021-09-06T09:59:41.000Z","url":"/friends/index.html","categories":[[" ",""]]},{"title":"搜索","date":"2021-09-06T09:40:56.000Z","url":"/search/index.html","categories":[[" ",""]]},{"title":"tags","date":"2021-09-06T09:46:26.000Z","url":"/tags/index.html","categories":[[" ",""]]}]