<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>宝生的博客</title>
  
  
  <link href="https://liuios.github.io/atom.xml" rel="self"/>
  
  <link href="https://liuios.github.io/"/>
  <updated>2023-05-15T09:51:54.468Z</updated>
  <id>https://liuios.github.io/</id>
  
  <author>
    <name>刘宝生</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>译-从零扩展到数百万用户</title>
    <link href="https://liuios.github.io/2023/05/15/%E8%AF%91-%E4%BB%8E%E9%9B%B6%E6%89%A9%E5%B1%95%E5%88%B0%E6%95%B0%E7%99%BE%E4%B8%87%E7%94%A8%E6%88%B7/"/>
    <id>https://liuios.github.io/2023/05/15/%E8%AF%91-%E4%BB%8E%E9%9B%B6%E6%89%A9%E5%B1%95%E5%88%B0%E6%95%B0%E7%99%BE%E4%B8%87%E7%94%A8%E6%88%B7/</id>
    <published>2023-05-15T07:42:33.000Z</published>
    <updated>2023-05-15T09:51:54.468Z</updated>
    
    <content type="html"><![CDATA[<p>设计一个支持数百万用户的系统具有挑战性，这是一个需要不断完善和无尽改进的旅程。在本章中，我们构建了一个支持单个用户的系统，并逐渐将其扩展为数百万用户提供服务。阅读本章后，您将掌握一些技术，这些技术将帮助您破解系统设计面试问题。</p><hr><h3 id="单服务器设置"><a href="#单服务器设置" class="headerlink" title="单服务器设置"></a>单服务器设置</h3><p>千里之行始于足下，构建一个复杂的系统也是这样。从很简单的开始，所有程序都在单个服务器上运行。如图1-1所示，单服务器设置中，所有的内容都在一台服务器上运行，web app, 数据库，缓存等。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515154707662.png" alt="image-20230515154707662"></p><p>要了解此设置，调查请求流和流量来源是有帮助的。让我们先看看请求流程（图1-2）。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515154939505.png" alt="image-20230515154939505"></p><p>1.用户通过域名访问网站，例如api.mysite.com。通常，域名系统（DNS）是由第三方提供的付费服务，而不是由我们的服务器托管。</p><p>2.互联网协议（IP）地址返回到浏览器或移动应用程序。在示例中，返回IP地址15.125.23.214。</p><p>3.一旦获得IP地址，超文本传输协议（HTTP）[1]请求将直接发送到您的Web服务器。</p><p>4.Web服务器返回HTML页面或JSON响应进行渲染。</p><p>接下来，让我们检查一下流量来源。您的Web服务器的流量来自两个来源：Web应用程序和移动应用程序。</p><ul><li><p>Web应用程序：它使用服务器端语言（Java、Python等）的组合来处理业务逻辑、存储等，以及客户端语言（HTML和JavaScript）进行演示。</p></li><li><p>移动应用程序：HTTP协议是移动应用程序和Web服务器之间的通信协议。由于其简单性，JavaScript对象表示法（JSON）是常用的API响应格式来传输数据。JSON格式的API响应示例如下所示：</p></li></ul><p><em>GET /users/12 – Retrieve user object for id = 12</em></p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515155228240.png" alt="image-20230515155253438" style="zoom:50%;" /><h3 id="数据库-Database"><a href="#数据库-Database" class="headerlink" title="数据库(Database)"></a>数据库(<strong>Database</strong>)</h3><p>随着用户群的增长，一台服务器是不够的，我们需要多台服务器：一台用于网络/移动流量，另一台用于数据库（图1-3）。分离网络/移动流量（网络层）和数据库（数据层）服务器允许它们独立扩展。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515160146336.png" alt="image-20230515160146336" style="zoom: 50%;" /><h3 id="使用哪些数据库？"><a href="#使用哪些数据库？" class="headerlink" title="使用哪些数据库？"></a>使用哪些数据库？</h3><p>可以选择关系型数据库和非关系型数据库，具体区别如下：</p><ul><li>关系型数据库：又称RDBMS(relational database management system)， 最主要有MySQL, Oracle database, PostgreSQL等。这些数据将数据存储在表和行里面，可以在不同的数据中进行join操作</li><li>非关系型数据库：又称NoSQL 数据库，有CouchDB,Neo4j, Cassandra, HBase, Amazon DynamoDB[2]等，可以分为key-value 型、图型、列型和文档性， 这些数据库通常不支持join操作。</li></ul><p>大多数情况下，关系型数据是适用的，但是如果有以下特殊的情况，可以考虑NoSQL:</p><ul><li>用户需要极低的延时</li><li>数据是非结构化的，不需要任何关系型数据</li><li>只有序列化和反序列化的数据（JSON, XML, YAML, etc）</li><li>需要存储极大规模数据</li></ul><hr><h3 id="垂直扩展和水平扩展"><a href="#垂直扩展和水平扩展" class="headerlink" title="垂直扩展和水平扩展"></a><strong>垂直扩展和水平扩展</strong></h3><p>垂直扩展，称为“向上扩展”，指的是使用性能更强大的服务器（CPU、RAM等）。水平扩展（称为“横向扩展”），使用更多的服务器来进行扩展。 流量很低的时候，使用垂直扩展,好处是非常简单，但是会受到限制：</p><ul><li>不可能在一台机器上无限添加CPU和内存</li><li>一台服务器，不能做到故障容错和冗余，如果一台服务器宕机，那么整个网站直接全部崩溃</li></ul><p>基于以上垂直扩展以上限制，水平扩展更适合大型应用，</p><p>在之前的设计中，用户直接连接到web服务器。如果web服务器处于离线状态，用户将无法访问该网站。在另一种情况下，如果许多用户同时访问web服务器，当访问量达到web服务器的负载限制，会出现响应较慢或无法连接到服务器的情况，而负载均衡器可以有效解决这些问题。</p><h3 id="负载均衡器"><a href="#负载均衡器" class="headerlink" title="负载均衡器"></a>负载均衡器</h3><p>负载均衡器在负载平衡集中定义的Web服务器之间均匀分配传入流量。图1-4显示了负载均衡器的工作原理。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515160724365.png" alt="image-20230515160724365" style="zoom:50%;" /><p>如图1-4所示，用户直接连接到负载均衡器的公共IP。通过此设置，客户端无法再直接访问网络服务器。为了提高安全性，私有IP用于服务器之间的通信。专用IP是只能在同一网络中的服务器之间访问的IP地址；然而，它无法通过互联网访问。负载均衡器通过专用IP与Web服务器通信。</p><p>在图1-4中，在添加负载均衡器和第二个Web服务器后，我们成功解决了故障转移问题，并提高了Web层的可用性。详情如下：</p><ul><li>如果服务器1离线，所有流量将路由到服务器2。这样可以防止网站崩溃。我们还将向服务器池中添加一个新的健康web服务器，以平衡负载</li><li>如果网站流量快速增长，而两台服务器不足以处理流量，负载平衡器可以优雅地处理这个问题。只需向web服务器池添加更多服务器，负载平衡器就会自动开始向它们发送请求。</li></ul><p>现在网络层看起来不错，数据层呢？当前设计有一个数据库，因此它不支持故障转移和冗余。数据库复制(Database replication)是解决这些问题的常见技术。让我们来看看。</p><h3 id="数据库复制"><a href="#数据库复制" class="headerlink" title="数据库复制"></a>数据库复制</h3><p>引自维基百科：“数据库复制可以在许多数据库管理系统中使用，通常原始（主）和副本（从）之间具有主/从关系”[3]。</p><p>master数据库通常只支持写操作,slave数据库从主数据库获取数据副本，slave只支持读取操作。所有数据修改命令（如insert、delete或update）都必须发送到主数据库。大多数应用程序读操作的比例远大于写， 因此，系统中从数据库的数量通常大于主数据库的数量。图1-5显示了一个master数据库和多个slave数据库。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515161358406.png" alt="image-20230515161358406" style="zoom:50%;" /><p>数据库复制的优势：</p><ul><li>更好的性能：在主-从模式下，所有写入和更新都发生在主节点上，读取操作分布在从节点上。这种模式提高了性能，支持并行处理更多的查询</li><li>可靠性：如果您的一台数据库服务器被不可抗力因素破坏，例如地震、台风，数据仍会保留。不必担心数据丢失，因为数据被跨区域、多点备份</li><li>高可用性：通过在不同的位置备份数据，当一台数据库离线了，网站仍然可用</li></ul><p>在上一节中，我们讨论了负载均衡器如何帮助提高系统可用性。我们在这里问同样的问题：如果其中一个数据库离线怎么办？图1-5中讨论的建筑设计可以处理这种情况：</p><ul><li>如果只有一个slave数据库可用，并且它处于离线状态，则读取操作将临时指向主数据库。故障被发现后，新的从数据库将取代旧的。如果有多个从数据库可用，读取操作将重定向到其他正常的从数据库。新的数据库服务器将取代旧的数据库服务器</li><li>如果master数据库离线，slave数据库将升级为新的master数据库。所有数据库操作将临时在新的主数据库上执行。新的slave数据库将立即取代旧的数据库进行数据复制。在生产项目中，升级一个新的主数据库更加复杂，因为从数据库中的数据可能不是最新的。丢失的数据需要通过运行数据恢复脚本进行更新。虽然其他一些复制方法，如多台master主机和循环复制，但会使配置更加复杂, 这里超出了讨论的范围。感兴趣的读者可以参考这些文章[4][5]。</li></ul><p>图1-6显示了添加负载平衡器和数据库复制后的系统设计。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515161831946.png" alt="image-20230515161831946" style="zoom:50%;" /><p>让我们看看设计：：</p><ul><li><p>用户从DNS获取负载均衡器的IP地址。</p></li><li><p>用户将负载均衡器与此IP地址连接。</p></li><li><p>HTTP请求被路由到服务器1或服务器2。</p></li><li><p>Web服务器从从属数据库读取用户数据。</p></li><li><p>Web服务器将任何数据修改操作路由到主数据库。这包括写入、更新和删除操作。</p></li></ul><p>现在，您对网络和数据层有了扎实的了解，是时候提高负载/响应时间了。这可以通过添加缓存层并将静态内容（JavaScript/CSS/图像/视频文件）转移到内容交付网络（CDN）来完成。</p><h3 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h3><p>缓存是一个临时存储区域，将昂贵响应或经常访问的数据的结果存储在内存中，以便更快地收到后续请求。如图1-6所示，每次加载新网页时，都会执行一个或多个数据库调用来获取数据。重复调用数据库会对应用程序性能产生很大影响。缓存可以缓解这个问题。</p><h3 id="缓存层"><a href="#缓存层" class="headerlink" title="缓存层"></a>缓存层</h3><p>缓存层是一个临时数据存储层，比数据库快得多。拥有单独的缓存层的好处包括更好的系统性能，减少数据库工作负载的能力，以及独立扩展缓存层的能力。图1-7显示了缓存服务器的可能设置：</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515163118739.png" alt="image-20230515163118739"></p><p>收到请求后，Web服务器首先检查缓存是否有可用的响应。如果有，它会将数据发回给客户端。如果没有，它会查询数据库，将响应存储在缓存中，并将其发送回客户端。这种缓存策略称为通读缓存。根据数据类型、大小和访问模式，可以使用其他缓存策略。之前的一项研究解释了不同的缓存策略是如何工作的[6]。</p><p>与缓存服务器交互很简单，因为大多数缓存服务器为常见编程语言提供API。以下代码片段显示了典型的Memcached API：</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515163233804.png" alt="image-20230515163233804"></p><h3 id="使用缓存的注意事项"><a href="#使用缓存的注意事项" class="headerlink" title="使用缓存的注意事项"></a>使用缓存的注意事项</h3><p>以下是使用缓存系统的一些注意事项：</p><ul><li><p>决定何时使用缓存。当数据被频繁读取但很少修改时，请考虑使用缓存。由于缓存数据存储在易失性内存中，因此缓存服务器不是持久数据的理想选择。例如，如果缓存服务器重新启动，内存中的所有数据都会丢失。因此，重要数据应保存在持久数据存储中。</p></li><li><p>到期政策。实施到期政策是一种良好做法。一旦缓存数据过期，它就会从缓存中删除。当没有过期策略时，缓存的数据将永久存储在内存中。建议不要让到期日期太短，因为这会导致系统过于频繁地从数据库中重新加载数据。同时，最好不要让过期日期太长，因为数据可能会变得过时。</p></li><li><p>一致性：这涉及保持数据存储和缓存同步。不一致可能会发生，因为数据存储和缓存上的数据修改操作不在单个事务中。当跨多个区域进行扩展时，保持数据存储和缓存之间的一致性具有挑战性。有关更多详细信息，请参阅Facebook[7]发布的题为“在Facebook上扩展Memcache”的论文。</p></li><li><p>缓解故障：单个缓存服务器代表潜在的单点故障（SPOF），在维基百科中定义如下：“单点故障（SPOF）是系统的一部分，如果失败，将阻止整个系统工作”[8]。因此，建议跨不同数据中心的多个缓存服务器，以避免SPOF。另一种推荐的方法是以一定百分比过度配置所需的内存。随着内存使用量的增加，这提供了一个缓冲区。</p></li></ul><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515163714698.png" alt="image-20230515163714698" style="zoom:50%;" /><ul><li>驱逐政策：一旦缓存已满，任何向缓存添加项目的请求都可能导致现有项目被删除。这被称为缓存驱逐。最近使用最少（LRU）是最受欢迎的缓存驱逐政策。可以采用其他驱逐政策，如最不常用（LFU）或先到先出（FIFO），以满足不同的用例。</li></ul><h3 id="内容交付网络（CDN）"><a href="#内容交付网络（CDN）" class="headerlink" title="内容交付网络（CDN）"></a>内容交付网络（CDN）</h3><p>CDN是一个地理上分散的服务器网络，用于提供静态内容。CDN服务器缓存静态内容，如图像、视频、CSS、JavaScript文件等。</p><p>动态内容缓存是一个相对较新的概念，超出了本书的范围。它允许缓存基于请求路径、查询字符串、cookie和请求标头的HTML页面。有关此的更多信息，请参阅参考材料[9]中提到的文章。这本书重点介绍如何使用CDN缓存静态内容。</p><p>以下是CDN在高层的工作方式：当用户访问网站时，最靠近用户的CDN服务器将提供静态内容。直觉上，来自CDN服务器的用户越大，网站加载速度就越慢。例如，如果CDN服务器在旧金山，洛杉矶的用户将比欧洲用户更快地获得内容。图1-9是一个很好的例子，显示了CDN如何改善加载时间。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515163954834.png" alt="image-20230515163954834" style="zoom:50%;" /><p>图1-10展示了CDN工作流程。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515164043970.png" alt="image-20230515164043970" style="zoom:50%;" /><p>1.用户A尝试使用图像URL获取image.png。URL的域由CDN提供商提供。以下两个图像URL是用于演示亚马逊和Akamai CDN上图像URL的示例：</p><ul><li><p><a href="https://mysite.cloudfront.net/logo.jpg">Https://mysite.cloudfront.net/logo.jpg</a></p></li><li><p><a href="https://mysite.akamai.com/image-manager/img/logo.jpg">Https://mysite.akamai.com/image-manager/img/logo.jpg</a></p></li></ul><p>2.如果CDN服务器在缓存中没有image.png，CDN服务器从源请求文件，源可以是Web服务器或像Amazon S3这样的在线存储。</p><p>3.源将image.png返回给CDN服务器，其中包括可选的HTTP头Time-to-Live（TTL），该标题描述了图像的缓存时间。</p><p>4.CDN缓存图像并将其返回给用户A。图像在CDN中保持缓存，直到TTL过期。</p><p>5.用户B发送请求以获取相同的图像。</p><p>6.只要TTL没有过期，图像就会从缓存中返回。</p><h3 id="使用CDN的注意事项"><a href="#使用CDN的注意事项" class="headerlink" title="使用CDN的注意事项"></a>使用CDN的注意事项</h3><ul><li><p>成本：CDN由第三方提供商运行，并向您收取进出CDN的数据传输费用。缓存不经常使用的资产没有显著的好处，因此您应该考虑将它们移出CDN。</p></li><li><p>设置适当的缓存到期：对于时间敏感的内容，设置缓存到期时间很重要。缓存到期时间不应太长，也不应太短。如果太长，内容可能不再新鲜。如果太短，可能会导致内容从原始服务器重复重新加载到CDN。</p></li><li><p>CDN回退：您应该考虑您的网站/应用程序如何应对CDN故障。如果CDN暂时中断，客户端应该能够检测到问题并从源请求资源。</p></li><li><p>文件无效：您可以通过执行以下操作之一，在文件过期前将其从CDN中删除：</p><ul><li><p>使用CDN供应商提供的API使CDN对象无效。</p></li><li><p>使用对象版本控制来服务对象的不同版本。要对对象进行版本，您可以向URL添加参数，例如版本号。例如，版本号2被添加到查询字符串中：image.png?V=2。</p></li></ul></li></ul><p>图1-11显示了添加CDN和缓存后的设计。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515164940741.png" alt="image-20230515164940741" style="zoom:50%;" /><p>1.静态资产（JS、CSS、图像等）不再由Web服务器提供服务。为了获得更好的性能，它们是从CDN中获取的。</p><p>2.通过缓存数据来减轻数据库负载。</p><h3 id="无状态网络层（Stateless-web-tier）"><a href="#无状态网络层（Stateless-web-tier）" class="headerlink" title="无状态网络层（Stateless web tier）"></a>无状态网络层（Stateless web tier）</h3><p>现在考虑水平扩展Web层，为此，我们需要将state 数据移出web层（例如用户session数据）。一个好的做法是将session数据存储在持久性存储中，如关系数据库或NoSQL。集群中的每个web服务器都可以访问数据库中的state数据。这被称为无状态web层。</p><h3 id="有状态架构-stateful"><a href="#有状态架构-stateful" class="headerlink" title="有状态架构(stateful)"></a><strong>有状态架构(stateful)</strong></h3><p>有状态server和无状态server有以下区别： 在多个请求中，有状态server会记住client数据（状态），无状态server不做任何记录。</p><p>图1-12展示了有状态（stateful）架构：</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515165542674.png" alt="image-20230515165542674" style="zoom:50%;" /><p>在图1-12中，UserA的session数据和个人资料存储在server1中。要对用户A进行身份验证，必须将HTTP请求路由到server1。如果请求被发送到server2等其他服务器，身份验证将失败，因为server2不包含UserA的会话数据。同样，来自user B的所有HTTP请求都必须路由到server2；来自UserC的所有请求都必须发送到server3。</p><p>这样会产生问题：来自同一client的每个请求都必须路由到同一server。虽然这可以通过大多数负载平衡器中的粘性 session来实现[10]；但这会这增加开销。使用这种方法，添加或删除服务器要困难得多，处理服务器故障也很困难。</p><h3 id="无状态架构-stateless"><a href="#无状态架构-stateless" class="headerlink" title="无状态架构(stateless)"></a><strong>无状态架构(stateless)</strong></h3><p>图1-13显示了无状态架构。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515165901823.png" alt="image-20230515165901823" style="zoom:50%;" /><p>在这种无状态架构中，用户的HTTP请求可以发送到任何web服务器。web服务器从共享数据库中获取状态数据。状态数据存储在共享数据存储中，不在web服务器内，使得系统更简单、更健壮且可扩展。</p><p>图1-14展示了无状态web层的架构设计：</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515170030404.png" alt="image-20230515170030404" style="zoom:50%;" /><p>在图1-14中，我们将session数据移出web层，并将其存储在持久数据存储中。共享数据存储可以是关系数据库、Memcached/Redis、NoSQL等。推荐使用NoSQL数据存，因为其易于扩展。自动缩放(Autoscaling)意味着可以根据流量负载自动添加或删除web服务器。从web服务器中删除状态数据后，可以根据流量负载添加或删除服务器，从而轻松实现web层的自动扩展。</p><p>当网站发展迅速，在国际上吸引了大量用户。为了在世界范围内提升可用性和更好的用户体验，支持多数据中心至关重要。</p><h3 id="数据中心（Data-centers）"><a href="#数据中心（Data-centers）" class="headerlink" title="数据中心（Data centers）"></a><strong>数据中心（Data centers）</strong></h3><p>图1-15显示了带有两个数据中心的架构设计。常规操作中，用户被路由到最近的数据中心，分配到美国东部和美国西部的流量分别为x%和（100–x%）。geoDNS可以提供这样的域名解析服务，它基于用户的地理位置将域名解析为不同IP地址。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515170311613.png" alt="image-20230515170311613" style="zoom:50%;" /><p>如果数据中心出现任何重大故障，我们会将所有流量转移到另外健康的数据中心。在图1-16中，ata center 2 (US-West）处于离线状态，100%的流量路由到data center 1 (US-East).</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515170503641.png" alt="image-20230515170503641" style="zoom:50%;" /><p>要实现多数据中心配置，必须解决几个技术难题：</p><ul><li>流量重定向：需要有效的工具将流量引导到正确的数据中心。根据用户所在的位置，GeoDNS可用于将流量引导至最近的数据中心</li><li>数据同步：来自不同地区的用户可以使用不同的本地数据库或缓存。在故障转移情况下，流量可能会被路由到无用户数据的数据中心。一种常见的策略是跨多个数据中心复制数据。之前的一项研究显示了Netflix如何实现异步多数据中心备份[11]。</li><li>测试和部署：使用多数据中心设置，在不同位置测试网站/应用程序非常重要。自动化部署工具对于保证所有数据中心的服务一致性至关重要[11]。</li></ul><p>为了进一步扩展我们的系统，我们需要解耦系统的不同组件，以便它们可以独立地进行扩展。消息队列被很多实际分布式系用来解决解耦问题。</p><h3 id="消息队列（Message-Queue）"><a href="#消息队列（Message-Queue）" class="headerlink" title="消息队列（Message Queue）"></a><strong>消息队列（Message Queue）</strong></h3><p>消息队列是存储在内存中的持久组件，支持异步通信。它充当缓冲区并分发异步请求。消息队列的基本架构很简单。输入服务（称为生产者/发布者）创建消息，并将其发布到消息队列。其他服务或服务器（称为使用者/订阅者）连接到队列，并执行消息定义的操作。模型如图1-17所示</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515170833714.png" alt="image-20230515170833714"></p><p>解耦使得消息队列在构建可扩展、可靠的应用时更受到青睐。通过使用消息队列，当消费者无法处理消息时，生产者依然可以向队列发布消息；生产者不可用时，消费者也可以从队列中读取消息。</p><p>考虑下面情况：应用程序支持照片定制，包括裁剪、锐化、模糊等。这些定制任务需要一定时间来完成。在图1-18中，web服务器将照片处理任务发布到消息队列。照片处理worker从消息队列中提取任务，并异步执行照片自定义任务。生产者和消费者可以独立扩展。当队列变大时，会添加更多的er以减少处理时间。但是，如果队列大部分时间都是空的，则可以减少worker的数量。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515171101891.png" alt="image-20230515171101891"></p><h3 id="logging、指标-metric-、自动化"><a href="#logging、指标-metric-、自动化" class="headerlink" title="logging、指标(metric)、自动化"></a><strong>logging、指标(metric)、自动化</strong></h3><p>当在少量的服务器上运行的小型网站时，采用log日志、metric和自动化支持是规范的做法，但不是必要的。然而，现在你的网站已经成长为一家大型企业，对这些工具的使用是必不可少的。</p><p>logging：监控错误日志很重要，因为它有助于识别系统中的错误和问题。您可以在每个服务器级别监视错误日志，或者使用工具将它们聚合到一个集中的服务中，以便于搜索和查看。 指标：收集不同类型的指标有助于我们获得业务洞察力，并了解系统的健康状态。以下一些指标很有用：</p><ul><li>主机级指标：CPU、内存、磁盘I/O等。</li><li>聚合级指标：例如，整个数据库层、缓存层等的性能。</li><li>关键业务指标：日常活跃用户、保留量、收入等</li></ul><p>自动化：当一个系统变得庞大复杂时，我们需要构建或利用自动化工具来提高生产力。持续集成是一种很好的做法，在这种做法中，每个代码签入都通过自动化进行验证，从而允许团队尽早发现问题。此外，自动化构建、测试、部署程序等，可以显著提高开发人员的生产率。</p><h3 id="添加了消息队列和不同的工具的架构设计"><a href="#添加了消息队列和不同的工具的架构设计" class="headerlink" title="添加了消息队列和不同的工具的架构设计"></a><strong>添加了消息队列和不同的工具的架构设计</strong></h3><p>图1-19显示了更新后的设计。由于空间限制，图中只显示了一个数据中心。1.该设计包括一个消息队列，有助于使系统解耦和故障恢复。 2.包括日志记录、监控、metric和自动化工具</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515171353790.png" alt="image-20230515171353790" style="zoom:100%;" /><p>随着数据规模不断增长，数据层也会过载，所以需要扩展数据层</p><h3 id="数据库扩展"><a href="#数据库扩展" class="headerlink" title="数据库扩展"></a><strong>数据库扩展</strong></h3><p>两种方式扩展：垂直扩展和水平扩展</p><h3 id="垂直扩展"><a href="#垂直扩展" class="headerlink" title="垂直扩展"></a><strong>垂直扩展</strong></h3><p>垂直扩展也称为向上扩展，是指通过对现有机器的性能（进行扩展。CPU、RAM、磁盘等）。有一些性能很强大的数据库服务器。根据Amazon关系数据库服务（RDS）[12]，可支持具有24 TB RAM的数据库服务器。这种强大的数据库服务器可以存储和处理大量数据。例如，<a href="https://link.zhihu.com/?target=http://stackoverflow.com">http://stackoverflow.com</a> 在2013年每月有1000多万独立访客，但它只有一个主数据库[13]。然而，垂直扩展也有一些严重的缺点：</p><ul><li>您可以向数据库服务器添加更多CPU、RAM等，但存在硬件限制。如果用户群很大，单台服务器是不够的</li><li>单点故障风险更大</li><li>垂直扩展的总体成本很高。性能强大的服务器要昂贵得多。水平缩放水平缩放也称为分片，是添加更多服务器的实践。图1-20比较了垂直缩放和水平缩放。</li></ul><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515171633578.png" alt="image-20230515171633578" style="zoom:50%;" /><p>分片（sharding）将大型数据库分成更小、更易于管理的部分，称为分片。每个分片共享相同的模式，尽管每个分片上的实际数据对该分片是唯一的。</p><p>图1-21显示了分片数据库的示例。根据用户ID将数据分配给不同数据库服务器。访问数据时，使用哈希函数来查找相应的分片。在我们的示例中，使用user_id%4作为哈希函数。如果取余结果等于0，则使用分片0存储和获取数据。如果结果等于1，则使用分片1。同样的逻辑也适用于其他分片。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515171816802.png" alt="image-20230515171816802" style="zoom:50%;" /><p>图1-22显示了分片数据库中的用户表。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515171854068.png" alt="image-20230515171854068" style="zoom:50%;" /><p>在执行分片(sharding)策略时最重要因素是选择分片密钥(sharding key)。sharding key, 又称为partition key）由一个或多个列组成，这些列决定数据的分布方式。如图1-22所示，“用户id”是sharding key。通过sharding key，路由到正确的数据库，对数据进行修改和检索数据。在选择sharding key时，最重要的标准之一是选择一个可以均匀分布数据的列。</p><p>sharding是一种很好的扩展数据库的技术，但它远不是一个完美的解决方案。它给系统带来了新的挑战：</p><p><strong>重新分片(resharding )数据：</strong> 1）单个碎片由于快速增长而无法保存更多数据时，需要重新sharding数据。2） 由于数据分布不均，某些碎片(shard)可能会比其他shard空间被更快使用完。当某个shard空间耗尽时，需要resharding 功能并移动数据。第5章讨论的一致性哈希可以解决这个问题。</p><p><strong>名人问题:</strong> 这也被称为热点key问题。对特定shard的过度访问可能会导致服务器过载。想象一下，凯蒂·佩里（Katy Perry）、贾斯汀·比伯（Justin Bieber）和Lady Gaga的数据在同一块碎片上。对于社交应用程序，该碎片将被读取操作淹没。为了解决这个问题，需要为每个名人分配一个碎片。每个shard甚至可能需要进一步的分区。</p><p><strong>join和反范式：</strong> 一旦数据库在多个服务器上被切分，就很难跨数据库执行join操作。常见的解决方法是对数据库进行反范式化，以便在单个表中执行查询。</p><p>在图 1-23 中，我们对数据库进行分片操作，以支持快速增长的数据流量。 同时，非关系功能的数据被存入 NoSQL ，以减少数据库负载。 这是一篇涵盖许多 NoSQL 用例的文章[14]。</p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230515172633093.png" alt="image-20230515172633093" style="zoom:50%;" /><h3 id="百万及百万以上的用户"><a href="#百万及百万以上的用户" class="headerlink" title="百万及百万以上的用户"></a><strong>百万及百万以上的用户</strong></h3><p>系统的扩展是一个迭代的过程。重复我们在本章学到的知识，让我们走得更远。当用户数达到百万以上时，需要更多细微的调整和新的策略，例如，将系统解耦到更小的服务。本章所学的将为后面的挑战打好基础，</p><p>本章主要讲，如何扩展系统以支持数百万用户：</p><ul><li>保持web层无状态</li><li>在每一层构建冗余</li><li>尽可能多地缓存数据</li><li>支持多个数据中心</li><li>在CDN中托管静态文件</li><li>通过分片扩展数据层</li><li>将每层分为独立的服务</li><li>为系统添加监控并使用自动化工具</li></ul><h3 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a><strong>参考文献</strong></h3><p>[1] Hypertext Transfer Protocol: <a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol</a><br>    [2] Should you go Beyond Relational Databases?:<br>    <a href="https://blog.teamtreehouse.com/should-you-go-beyond-relational-databases">https://blog.teamtreehouse.com/should-you-go-beyond-relational-databases</a><br>    [3] Replication:  <a href="https://en.wikipedia.org/wiki/Replication_(computing)">https://en.wikipedia.org/wiki/Replication_(computing)</a><br>    [4] Multi-master replication:<br>    <a href="https://en.wikipedia.org/wiki/Multi-master_replication">https://en.wikipedia.org/wiki/Multi-master_replication</a><br>    [5] NDB Cluster Replication: Multi-Master and Circular Replication: <a href="https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-replication-multi-master.html">https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-replication-multi-master.html</a><br>    [6] Caching Strategies and How to Choose the Right One:<br>    <a href="https://codeahoy.com/2017/08/11/caching-strategies-and-how-to-choose-the-right-one/">https://codeahoy.com/2017/08/11/caching-strategies-and-how-to-choose-the-right-one/</a><br>    [7] R. Nishtala, “Facebook, Scaling Memcache at,” 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI ’13).<br>    [8] Single point of failure:  <a href="https://en.wikipedia.org/wiki/Single_point_of_failure">https://en.wikipedia.org/wiki/Single_point_of_failure</a><br>    [9] Amazon CloudFront Dynamic Content Delivery:<br>    <a href="https://aws.amazon.com/cloudfront/dynamic-content/">https://aws.amazon.com/cloudfront/dynamic-content/</a><br>    [10] Configure Sticky Sessions for Your Classic Load Balancer:</p><p>​    <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html">https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html</a><br>​    [11] Active-Active for Multi-Regional Resiliency:<br>​    <a href="https://netflixtechblog.com/active-active-for-multi-regional-resiliency-c47719f6685b">https://netflixtechblog.com/active-active-for-multi-regional-resiliency-c47719f6685b</a><br>​    [12] Amazon EC2 High Memory Instances:<br>​    <a href="https://aws.amazon.com/ec2/instance-types/high-memory/">https://aws.amazon.com/ec2/instance-types/high-memory/</a><br>​    [13] What it takes to run Stack Overflow:<br>​    <a href="http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow">http://nickcraver.com/blog/2013/11/22/what-it-takes-to-run-stack-overflow</a><br>​    [14] What The Heck Are You Actually Using NoSQL For:<br>​    <a href="http://highscalability.com/blog/2010/12/6/what-the-heck-are-you-actually-using-nosql-for.html">http://highscalability.com/blog/2010/12/6/what-the-heck-are-you-actually-using-nosql-for.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;设计一个支持数百万用户的系统具有挑战性，这是一个需要不断完善和无尽改进的旅程。在本章中，我们构建了一个支持单个用户的系统，并逐渐将其扩展为数百万用户提供服务。阅读本章后，您将掌握一些技术，这些技术将帮助您破解系统设计面试问题。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;单服务器设置</summary>
      
    
    
    
    
    <category term="-书籍 -系统设计面试" scheme="https://liuios.github.io/tags/%E4%B9%A6%E7%B1%8D-%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>苹果电脑型号对应系统版本号对照表</title>
    <link href="https://liuios.github.io/2023/05/05/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91%E5%9E%8B%E5%8F%B7%E5%AF%B9%E5%BA%94%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC%E5%8F%B7%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
    <id>https://liuios.github.io/2023/05/05/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91%E5%9E%8B%E5%8F%B7%E5%AF%B9%E5%BA%94%E7%B3%BB%E7%BB%9F%E7%89%88%E6%9C%AC%E5%8F%B7%E5%AF%B9%E7%85%A7%E8%A1%A8/</id>
    <published>2023-05-05T07:06:31.000Z</published>
    <updated>2023-05-05T09:21:18.024Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th align="center"><span style="display:inline-block;width:140px">MacBook Pro电脑型号</span></th><th align="center"><span style="display:inline-block;width:100px">发布日期</span></th><th align="center">最低macOS版本</th><th align="center">最高macOS版本</th><th align="center">建议macOS版本</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">MacBook Pro 14/16寸 2023年</td><td align="center">2023年01月</td><td align="center">13.1.0</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">Apple M2 Pro/Max芯片</td></tr><tr><td align="center">MacBook Pro 13/16寸 2022年</td><td align="center">2022年06月</td><td align="center">12.4.0</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">Apple M2芯片</td></tr><tr><td align="center">MacBook Pro 14寸 2021年</td><td align="center">2021年10月</td><td align="center">11.6.1</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">Apple M1 Pro/Max芯片</td></tr><tr><td align="center">MacBook Pro 13寸 2020年</td><td align="center">2020年11月</td><td align="center">11.0.1</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">Apple M1芯片</td></tr><tr><td align="center">MacBook Pro 13寸 2020年初 4端口</td><td align="center">2020年05月</td><td align="center">10.15.4</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">10.15.4-19E2269</td></tr><tr><td align="center">MacBook Pro 13寸 2020年初 2端口</td><td align="center">2020年05月</td><td align="center">10.15.4</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">10.15.4-19E2269</td></tr><tr><td align="center">MacBook Pro 16寸 2019年末</td><td align="center">2019年11月</td><td align="center">10.15.2</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">10.15.1 (19B2106)</td></tr><tr><td align="center">MacBook Pro 13寸 2019年中期 2端口</td><td align="center">2019年7月</td><td align="center">10.14.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15寸 2019年中期</td><td align="center">2019年5月</td><td align="center">10.14.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 13寸 2019年中期 4端口</td><td align="center">2019年5月</td><td align="center">10.14.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15寸 有触控条 2018年中期</td><td align="center">2018年6月</td><td align="center">10.13.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">最低要求 10.13.6 17G2208</td></tr><tr><td align="center">MacBook Pro 13寸 有触控条 2018年中期</td><td align="center">2018年6月</td><td align="center">10.13.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">最低要求 10.13.6 17G2208</td></tr><tr><td align="center">MacBook Pro 15寸 有触控条 2017年</td><td align="center">2017年6月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 13寸 有触控条 2017年</td><td align="center">2017年6月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 13寸 无触控条 2017年</td><td align="center">2017年6月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15寸 2016年末</td><td align="center">2016年11月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13寸 2016年末 有触控条</td><td align="center">2016年11月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13寸 2016年末 无触控条</td><td align="center">2016年10月</td><td align="center">10.12.6</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 15寸 2015年中</td><td align="center">2015年5月</td><td align="center">10.10.5</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13寸 2015年初</td><td align="center">2015年3月</td><td align="center">10.10.5</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15寸 2014年中</td><td align="center">2014年7月</td><td align="center">10.9.5</td><td align="center">目前最新版本</td><td align="center">目前最新版本</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15寸 2013年末</td><td align="center">2013年10月</td><td align="center">10.9.5</td><td align="center">11.6.2</td><td align="center">11.6.1</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15寸 2013年初</td><td align="center">2013年2月</td><td align="center">10.8.5</td><td align="center">11.6.2</td><td align="center">11.6.1</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13寸 Retina 2012年末</td><td align="center">2012年10月</td><td align="center">10.8.5</td><td align="center">11.6.2</td><td align="center">11.6.1</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15寸 2012年中</td><td align="center">2012年6月</td><td align="center">10.7.5</td><td align="center">10.15.7</td><td align="center">10.15.7</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15/17寸 2011年末</td><td align="center">2011年10月</td><td align="center">10.7.5</td><td align="center">10.13.6</td><td align="center">10.12.6</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15/17寸 2011年初</td><td align="center">2011年2月</td><td align="center">10.6.6</td><td align="center">10.13.6</td><td align="center">10.12.6</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13寸 2010年中</td><td align="center">2010年4月</td><td align="center">10.7.5</td><td align="center">10.13.6</td><td align="center">10.12.6</td><td align="center">出厂附送的10.6.3也支持</td></tr><tr><td align="center">MacBook Pro 15/17寸 2010年中</td><td align="center">2010年4月</td><td align="center">10.6.3</td><td align="center">10.13.6</td><td align="center">10.12.6</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 13/15/17寸 2009年中</td><td align="center">2009年6月</td><td align="center">10.5.7</td><td align="center">10.11.6</td><td align="center">10.11.6</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 17寸 2009年初</td><td align="center">2009年1月</td><td align="center">10.5.6</td><td align="center">10.11.6</td><td align="center">10.11.6</td><td align="center">–</td></tr><tr><td align="center">MacBook Pro 15/17寸 2008年初/末</td><td align="center">2008年10月</td><td align="center">10.5.6</td><td align="center">10.11.6</td><td align="center">10.11.6</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15/17寸 2.4/2.2 GHz</td><td align="center">2007年6月</td><td align="center">10.4.10</td><td align="center">10.7.5</td><td align="center">10.7.5</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15/17寸 Core 2 Duo</td><td align="center">2006年10月</td><td align="center">10.4.10</td><td align="center">10.7.5</td><td align="center">10.7.5</td><td align="center"></td></tr><tr><td align="center">MacBook Pro 15/17寸 镜面</td><td align="center">2006年2/4月</td><td align="center">10.4.10</td><td align="center">10.7.5</td><td align="center">10.7.5</td><td align="center"></td></tr></tbody></table><hr><table><thead><tr><th align="left">MacBook Air电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">MacBook Air 14寸 2022年</td><td align="left">2022年06月</td><td align="left">12.4.0</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">Apple M2芯片</td></tr><tr><td align="left">MacBook Air 13寸 2020年</td><td align="left">2020年11月</td><td align="left">11.0.1</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">Apple M1芯片</td></tr><tr><td align="left">MacBook Air 13寸 2020年初</td><td align="left">2020年03月</td><td align="left">10.15.3</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left"></td></tr><tr><td align="left">MacBook Air 13寸 2019年中期</td><td align="left">2019年7月9日</td><td align="left">10.14.6</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 13寸 2018年</td><td align="left">2018年10月</td><td align="left">10.14.6</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 13寸 2017年</td><td align="left">2017年6月</td><td align="left">10.12.6</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2015年初</td><td align="left">2015年3月</td><td align="left">10.10.5</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2014年初</td><td align="left">2014年4月</td><td align="left">10.9.5</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2013年中</td><td align="left">2013年6月</td><td align="left">10.8.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2012年中</td><td align="left">2012年6月</td><td align="left">10.7.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2011年中</td><td align="left">2011年7月</td><td align="left">10.7.5</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 11/13寸 2010年末</td><td align="left">2010年10月</td><td align="left">10.6.4</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 13寸 2009年中</td><td align="left">2009年6月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">MacBook Air 13寸 2008年末</td><td align="left">2008年11月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left"></td></tr><tr><td align="left">MacBook Air 13寸 2008年初</td><td align="left">2008年11月</td><td align="left">10.5.6</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left"></td></tr></tbody></table><hr><table><thead><tr><th align="left">MacBook电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">MacBook 12寸 2017年</td><td align="left">2017年6月</td><td align="left">10.12.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">MacBook 12寸 2016初</td><td align="left">2016年4月</td><td align="left">10.11.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">MacBook 12寸 2015初</td><td align="left">2015年4月</td><td align="left">10.10.5</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">MacBook 13寸 2010中</td><td align="left">2010年5月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">MacBook 13寸 2009末</td><td align="left">2009年10月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">MacBook 13寸 2009初/中</td><td align="left">2009年1月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">MacBook 13寸 2008末铝合金外壳</td><td align="left">2008年10月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left"></td></tr><tr><td align="left">MacBook 13寸 2008末 (非铝合金外壳)</td><td align="left">2008年10月</td><td align="left">10.5.6</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">10.7.5最低要2G内存</td></tr><tr><td align="left">MacBook 13寸 2008初</td><td align="left">2008年2月</td><td align="left">10.5.6</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">10.7.5最低要2G内存</td></tr><tr><td align="left">MacBook 13寸 2007中/末</td><td align="left">2007年5/10月</td><td align="left">10.5.6</td><td align="left">10.7.5</td><td align="left">10.6.X</td><td align="left">10.6.x最低要1G内存</td></tr><tr><td align="left">MacBook 13寸 2006年末</td><td align="left">2006年11月</td><td align="left">10.4.8</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">10.7.5要求2G或以上的内存</td></tr><tr><td align="left">MacBook 13寸 2006年初</td><td align="left">2006年5月</td><td align="left">10.4.8</td><td align="left">10.7.5</td><td align="left">10.6.X</td><td align="left">10.6.x要求1G或以上的内存</td></tr></tbody></table><hr><table><thead><tr><th align="left">iMac电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">iMac 24寸 4.5K 2021年</td><td align="left">2021年5月</td><td align="left">11.3</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">M1芯片</td></tr><tr><td align="left">iMac 27寸 5K 2020年</td><td align="left">2020年8月</td><td align="left">10.15.6(19G2005)</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">T2芯片</td></tr><tr><td align="left">iMac 21.5寸 4K 2020年</td><td align="left">2020年8月</td><td align="left">10.14.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">对比2019款只更新了硬盘</td></tr><tr><td align="left">iMac 27寸 5K 2019年</td><td align="left">2019年3月</td><td align="left">10.14.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 4K 2019年</td><td align="left">2019年3月</td><td align="left">10.14.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac Pro 27寸 5K 2017年</td><td align="left">2017年12月</td><td align="left">10.13.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 27寸 5K 2017年</td><td align="left">2017年6月</td><td align="left">10.12.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 4K 2017年</td><td align="left">2017年6月</td><td align="left">10.12.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 普通屏 2017年</td><td align="left">2017年6月</td><td align="left">10.12.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5/27寸 2015年末</td><td align="left">2015年10月</td><td align="left">10.11.6</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 27寸 5K 2015年中</td><td align="left">2015年5月</td><td align="left">10.10.5</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 27寸 5K 2014年末</td><td align="left">2014年10月</td><td align="left">10.10.5</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 2014年中</td><td align="left">2014年6月</td><td align="left">10.9.5</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5/27寸 2013年末</td><td align="left">2013年9月</td><td align="left">10.8.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5/27寸 2012年末</td><td align="left">2012年11/12月</td><td align="left">10.8.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 2011年末</td><td align="left">2011年8月</td><td align="left">10.7.5</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5/27寸 2011年中</td><td align="left">2011年5月</td><td align="left">10.6.6</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">仅支持随机附送的10.6.6</td></tr><tr><td align="left">iMac 27寸 2010年中</td><td align="left">2010年7月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5寸 2010年中</td><td align="left">2010年7月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">iMac 21.5/27寸 2009年末</td><td align="left">2009年10/11月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.12.6</td><td align="left">–</td></tr><tr><td align="left">iMac 20寸 2009年中</td><td align="left">2009年4月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">iMac 20/24寸 2009年初</td><td align="left">2009年3月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">iMac 20/24寸 2008年初</td><td align="left">2008年4月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">iMac 20/24寸 2007年中</td><td align="left">2007年8月</td><td align="left">10.4.10</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">iMac 17/20/24寸 2006年末</td><td align="left">2006年9月</td><td align="left">10.4.7</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr><tr><td align="left">iMac 17 2006年初/中</td><td align="left">2006年1/7月</td><td align="left">10.4.6</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr></tbody></table><hr><table><thead><tr><th align="left">Mac Studio电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">Mac Studio M1 2022年初</td><td align="left">2022年3月</td><td align="left">12.2.0</td><td align="left">目前最高版本</td><td align="left">目前最高版本</td><td align="left">Apple M1 Max/Ultra芯片</td></tr></tbody></table><hr><table><thead><tr><th align="left">Mac Mini电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">Mac Mini 2023年初</td><td align="left">2023年1月</td><td align="left">13.1.0</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">Apple M2/Pro芯片</td></tr><tr><td align="left">Mac Mini 2020年末</td><td align="left">2020年11月</td><td align="left">11.0.1</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">Apple M1芯片</td></tr><tr><td align="left">Mac Mini 2020年初</td><td align="left">2020年3月</td><td align="left">10.14.6</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">只升级了硬盘</td></tr><tr><td align="left">Mac Mini 2018年末</td><td align="left">2018年10月</td><td align="left">10.14.6</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2014年末</td><td align="left">2014年10月</td><td align="left">10.10.5</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">Mac Mini/Server 2012年末</td><td align="left">2012年10月</td><td align="left">10.8.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">Mac Mini/Server 2011年中</td><td align="left">2011年7月</td><td align="left">10.7.5</td><td align="left">10.13.6</td><td align="left">10.13.6</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2010年中</td><td align="left">2010年6月</td><td align="left">10.6.3</td><td align="left">10.13.6</td><td align="left">10.13.6</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2009年末</td><td align="left">2009年10月</td><td align="left">10.6.3</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2009年初</td><td align="left">2009年3月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2007年中</td><td align="left">2007年8月</td><td align="left">10.4.10</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2006年末</td><td align="left">2006年9月</td><td align="left">10.4.7</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr><tr><td align="left">Mac Mini 2006年初</td><td align="left">2006年3月</td><td align="left">10.4.5</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr></tbody></table><hr><table><thead><tr><th align="left">Mac Pro电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">Mac Pro 2019年末</td><td align="left">2019年12月</td><td align="left">10.15.2</td><td align="left">目前最新版本</td><td align="left">目前最新版本</td><td align="left">–</td></tr><tr><td align="left">Mac Pro 2013年末</td><td align="left">2013年12月</td><td align="left">10.9.5</td><td align="left">11.6.2</td><td align="left">11.6.1</td><td align="left">–</td></tr><tr><td align="left">Mac Pro 2012年中</td><td align="left">2012年6月</td><td align="left">10.7.5</td><td align="left">10.14.6</td><td align="left">10.13.6</td><td align="left">特别说明</td></tr><tr><td align="left">Mac Pro 2010年中</td><td align="left">2010年8月</td><td align="left">10.6.4</td><td align="left">10.14.6</td><td align="left">10.13.6</td><td align="left">特别说明</td></tr><tr><td align="left">Mac Pro 2009年初</td><td align="left">2009年3月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">Mac Pro 2008年初</td><td align="left">2008年1月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left"></td></tr><tr><td align="left">Mac Pro 2006年中</td><td align="left">2006年8月</td><td align="left">10.4.7</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr></tbody></table><hr><table><thead><tr><th align="left">Xserve电脑型号</th><th align="left">发布日期</th><th align="left">最低macOS版本</th><th align="left">最高macOS版本</th><th align="left">建议macOS版本</th><th align="left">备注</th></tr></thead><tbody><tr><td align="left">Xserve 2009年初</td><td align="left">2009年4月</td><td align="left">10.5.6</td><td align="left">10.11.6</td><td align="left">10.11.6</td><td align="left">–</td></tr><tr><td align="left">Xserve 2008年初</td><td align="left">2008年1月</td><td align="left">10.5.1</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr><tr><td align="left">Xserve 2006年末</td><td align="left">2006年11月</td><td align="left">10.4.8</td><td align="left">10.7.5</td><td align="left">10.7.5</td><td align="left">–</td></tr></tbody></table><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/macos.png" alt="macOS"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;span style=&quot;display:inline-block;width:140px&quot;&gt;MacBook Pro电脑型号&lt;/span&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;&lt;span </summary>
      
    
    
    
    
    <category term="mac" scheme="https://liuios.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Xcode真机运行报错：Failed to prepare the device for development解决方法</title>
    <link href="https://liuios.github.io/2023/04/28/Xcode%E7%9C%9F%E6%9C%BA%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9AFailed-to-prepare-the-device-for-development%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://liuios.github.io/2023/04/28/Xcode%E7%9C%9F%E6%9C%BA%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%9AFailed-to-prepare-the-device-for-development%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2023-04-28T02:25:17.000Z</published>
    <updated>2023-04-28T02:39:59.154Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文讲解了在Xcode不支持iOS系统版本时如何通过增加Xcode系统支持来解决问题。当出现报错“Failed to prepare the device for development. This operation can fail if the version of the OS on the device is incompatible with the installed version of Xcode. You may also need to restart your Mac and device in order to correctly detect compatibility.”时，首先尝试重启iOS设备，之后查看Xcode版本是否支持当前手机系统。如果不支持，可以通过进入iOSDeviceSupport项目（Gitee或Github）下载需要支持的系统文件，新建一个文件夹，然后将解压好的内容全部粘贴进去，最后再真机运行即可。</p></blockquote><h3 id="当遇到此报错"><a href="#当遇到此报错" class="headerlink" title="当遇到此报错"></a>当遇到此报错</h3><p>Failed to prepare the device for development. This operation can fail if the version of the OS on the device is incompatible with the installed version of Xcode. You may also need to restart your Mac and device in order to correctly detect compatibility.</p><p>首先你应该做的是尝试重启你的iOS设备。</p><p>重启连不上之后可以查看一下你的Xcode版本是否支持你现在的手机系统。</p><hr><h3 id="增加Xcode系统支持"><a href="#增加Xcode系统支持" class="headerlink" title="增加Xcode系统支持"></a>增加Xcode系统支持</h3><p>进入<a href="https://gitee.com/Han0/iOSDeviceSupport"> iOSDeviceSupport </a>（或者Github在<a href="https://github.com/JinjunHan/iOSDeviceSupport">这里</a>）</p><p>下载你需要支持的系统文件</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230428103219546.png" alt="image-20230428103219546"></p><p>然后再打开终端，输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport</span><br></pre></td></tr></table></figure><p>然后把解压的文件夹放进去</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230428103527084.png" alt="image-20230428103527084"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文讲解了在Xcode不支持iOS系统版本时如何通过增加Xcode系统支持来解决问题。当出现报错“Failed to prepare the device for development. This operation can fail if th</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://liuios.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>通过Xcode对ipa进行重签名</title>
    <link href="https://liuios.github.io/2023/04/28/%E9%80%9A%E8%BF%87Xcode%E5%AF%B9ipa%E8%BF%9B%E8%A1%8C%E9%87%8D%E7%AD%BE%E5%90%8D/"/>
    <id>https://liuios.github.io/2023/04/28/%E9%80%9A%E8%BF%87Xcode%E5%AF%B9ipa%E8%BF%9B%E8%A1%8C%E9%87%8D%E7%AD%BE%E5%90%8D/</id>
    <published>2023-04-28T02:07:39.000Z</published>
    <updated>2023-04-28T02:24:31.266Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-首先新建一个Xcode工程在工程目录下新建一个APP的文件夹"><a href="#1-首先新建一个Xcode工程在工程目录下新建一个APP的文件夹" class="headerlink" title="1. 首先新建一个Xcode工程在工程目录下新建一个APP的文件夹"></a>1. 首先新建一个Xcode工程在工程目录下新建一个APP的文件夹</h3><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230428101913826.png" alt="image-20230428101913826"></p><h3 id="2-在工程中新增一个脚本运行"><a href="#2-在工程中新增一个脚本运行" class="headerlink" title="2.在工程中新增一个脚本运行"></a>2.在工程中新增一个脚本运行</h3><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20230428102122114.png" alt="image-20230428102122114"></p><p>脚本如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">ASSETS_PATH=<span class="string">&quot;$&#123;SRCROOT&#125;/APP&quot;</span></span><br><span class="line"></span><br><span class="line">TEMP_PATH=<span class="string">&quot;$&#123;SRCROOT&#125;/temp&quot;</span></span><br><span class="line"></span><br><span class="line">TARGET_IPA_PATH=<span class="string">&quot;$&#123;ASSETS_PATH&#125;/*.ipa&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除temp文件夹下的内容 然后新建</span></span><br><span class="line">rm -rf <span class="string">&quot;$&#123;SRCROOT&#125;/temp&quot;</span></span><br><span class="line">mkdir -p <span class="string">&quot;$&#123;SRCROOT&#125;/temp&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#1.解压ipa 到temp下</span></span><br><span class="line">unzip -oqq <span class="string">&quot;$TARGET_IPA_PATH&quot;</span> -d <span class="string">&quot;$TEMP_PATH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拿到解压的临时的app路径</span></span><br><span class="line">TEMP_APP_PATH=<span class="variable">$(</span>set -- <span class="string">&quot;$TEMP_PATH/Payload/&quot;</span>*.app;echo <span class="string">&quot;$1&quot;</span>)</span><br><span class="line"><span class="comment">#echo &quot;路径是:$TEMP_APP_PATH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#2. 将解压出来的app拷贝到工程下</span></span><br><span class="line"><span class="comment">#BUILT_PRODUCTS_DIR 工程生成包的路径</span></span><br><span class="line"><span class="comment">#TARGET_NAME</span></span><br><span class="line">TARGET_APP_PATH=<span class="string">&quot;$BUILT_PRODUCTS_DIR/$TARGET_NAME.app&quot;</span></span><br><span class="line"><span class="comment">#echo &quot;app路径是:$TARGET_IPA_PATH&quot;</span></span><br><span class="line"></span><br><span class="line">rm -rf <span class="string">&quot;$TARGET_APP_PATH&quot;</span></span><br><span class="line">mkdir -p <span class="string">&quot;$TARGET_APP_PATH&quot;</span></span><br><span class="line">cp -rf <span class="string">&quot;$TEMP_APP_PATH/&quot;</span> <span class="string">&quot;$TARGET_APP_PATH&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#3. 删除extension和watch</span></span><br><span class="line">rm -rf <span class="string">&quot;$TARGET_APP_PATH/PlugIns&quot;</span></span><br><span class="line">rm -rf <span class="string">&quot;$TARGET_APP_PATH/watch&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#4. 修改 info.plist</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 &quot;Set : KEY Value&quot; &quot;目标文件路径&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/usr/libexec CFBundleIdentifier</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /usr/libexec/PlistBuddy -c &quot;Set :CFBundleIdentifier $PRODUCT_BUNDLE_IDENTIFIER&quot; &quot;$TARGET_APP_PATH/Info.plist&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除设备限制</span></span><br><span class="line">/usr/libexec/PlistBuddy -c <span class="string">&quot;Delete :UISupportedDevices&quot;</span> <span class="string">&quot;$TARGET_APP_PATH/Info.plist&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#5. 给可执行文件上执行权限</span></span><br><span class="line"><span class="comment">#拿到macho 文件路径</span></span><br><span class="line">APP_BINARY=<span class="string">`plutil -convert xml1 -o - $TARGET_APP_PATH/Info.plist|grep -A1 Exec|tail -n1|cut -f2 -d\&gt;|cut -f1 -d\&lt;`</span></span><br><span class="line"><span class="comment">#上权限</span></span><br><span class="line">chmod +x <span class="string">&quot;$TARGET_APP_PATH/$APP_BINARY&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-----------------------------</span></span><br><span class="line"><span class="comment">#6.重签名第三方app 第三方的frameworks</span></span><br><span class="line">TARGET_APP_FRAMEWORKS_PATH=<span class="string">&quot;$TARGET_APP_PATH/Frameworks&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;$TARGET_APP_FRAMEWORKS_PATH&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line"><span class="comment">#echo &quot;六六六:$FRAMEWORK&quot;;</span></span><br><span class="line"><span class="keyword">for</span> FRAMEWORK <span class="keyword">in</span> <span class="string">&quot;$TARGET_APP_FRAMEWORKS_PATH/&quot;</span>*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment">#echo &quot;包的路径:$FRAMEWORK&quot;</span></span><br><span class="line"><span class="comment">#签名</span></span><br><span class="line">/usr/bin/codesign --force --sign <span class="string">&quot;$EXPANDED_CODE_SIGN_IDENTITY&quot;</span> <span class="string">&quot;$FRAMEWORK&quot;</span></span><br><span class="line">    done</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-首先新建一个Xcode工程在工程目录下新建一个APP的文件夹&quot;&gt;&lt;a href=&quot;#1-首先新建一个Xcode工程在工程目录下新建一个APP的文件夹&quot; class=&quot;headerlink&quot; title=&quot;1. 首先新建一个Xcode工程在工程目录下新建一个AP</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="破解" scheme="https://liuios.github.io/tags/%E7%A0%B4%E8%A7%A3/"/>
    
    <category term="ipa" scheme="https://liuios.github.io/tags/ipa/"/>
    
  </entry>
  
  <entry>
    <title>网页在线工具汇总</title>
    <link href="https://liuios.github.io/2023/04/27/%E7%BD%91%E9%A1%B5%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/"/>
    <id>https://liuios.github.io/2023/04/27/%E7%BD%91%E9%A1%B5%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7%E6%B1%87%E6%80%BB/</id>
    <published>2023-04-27T09:15:00.000Z</published>
    <updated>2023-04-28T03:12:00.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用在线工具"><a href="#常用在线工具" class="headerlink" title="常用在线工具"></a>常用在线工具</h2><table><thead><tr><th align="left"><a href="https://musetransfer.com/?iao.su">文件传输</a></th><th align="left"><a href="http://lite.tonzhon.com/?iao.su">在线听歌</a></th><th align="left"><a href="https://sourl.cn/etaGky">看电影</a></th></tr></thead><tbody><tr><td align="left"><a href="https://tophub.today/?iao.su">今日热榜</a></td><td align="left"><a href="https://the.top/?iao.su">上班摸鱼</a></td><td align="left"><a href="https://pic.ihcloud.net/meituan.html?iao.su">免费图床</a></td></tr><tr><td align="left"><a href="https://xsear.ch/?iao.su">找电影</a></td><td align="left"><a href="https://note.ms/">note.ms</a></td><td align="left"><a href="https://bin.appinn.com/?iao.su">匿名分享</a></td></tr><tr><td align="left"><a href="https://shengka.ai.sogou.com/tts/new/">文本配音</a></td><td align="left"><a href="https://docsmall.com/?iao.su">PDF 压缩</a></td><td align="left"><a href="https://wallhere.com/?iao.su">高清壁纸</a></td></tr><tr><td align="left"><a href="https://it365.gitlab.io/zh-cn/link-finder/?iao.su">链接提取</a></td><td align="left"><a href="https://duguang.aliyun.com/experience?type=doc&midtype=fulldoc&subtype=document">ocr 识别</a></td><td align="left"><a href="https://www.ppzhilian.com/">pp 直连</a></td></tr><tr><td align="left"><a href="https://www.dogged.cn/?iao.su">加密解密</a></td><td align="left"><a href="https://dalao.ru/">快速搜索</a></td><td align="left"><a href="http://www.yalijuda.com/%E8%A7%86%E9%A2%91%E5%8E%8B%E7%BC%A9-2/">视频压缩</a></td></tr><tr><td align="left"><a href="https://sharenote.app/">在线笔记</a></td><td align="left"><a href="https://dlj.li/?iao.su">缩短网址</a></td><td align="left"><a href="https://video.ciding.cc/?iao.su">短视频解析</a></td></tr><tr><td align="left"><a href="https://www.polebrief.com/edit">写简历</a></td><td align="left"><a href="https://tools.fun/tinyimg.html">图片压缩</a></td><td align="left"><a href="https://ailogo.qq.com/">做 Logo</a></td></tr><tr><td align="left"><a href="https://ai.12348.gov.cn/">智能法律咨询</a></td><td align="left"><a href="https://m.youlai.cn/jijiu">生活急救指南</a></td><td align="left"></td></tr></tbody></table><blockquote><p>快速定位资源：<a href="https://dalao.ru/">大佬点入</a>、<a href="https://dalao.ru/">dalao.ru</a></p></blockquote><h2 id="工具合集"><a href="#工具合集" class="headerlink" title="工具合集"></a>工具合集</h2><table><thead><tr><th align="left"><a href="https://iao.su/531/">影视在线大全</a></th><th align="left"><a href="https://iao.su/2217/">音乐在线大全</a></th><th align="left"><a href="https://iao.su/2495/">短信接码网站</a></th><th align="left">匿名分享服务</th></tr></thead><tbody><tr><td align="left"><a href="https://iao.su/2814/">网盘加速方法</a></td><td align="left"><a href="https://iao.su/3700/">资源搜索引擎</a></td><td align="left"><a href="https://iao.su/3095/">图片无损放大</a></td><td align="left"><a href="https://iao.su/3170/">国内在线分享服务</a></td></tr><tr><td align="left"><a href="https://iao.su/48/">图片压缩网站</a></td><td align="left"><a href="https://iao.su/2968/">在线抠图大全</a></td><td align="left"><a href="https://iao.su/1253/">免费文件存储</a></td><td align="left"><a href="https://iao.su/47/">临时邮箱大全</a></td></tr><tr><td align="left"><a href="https://iao.su/pic.html">免费图床大全</a></td><td align="left"><a href="https://iao.su/2225/">二维码生成</a></td><td align="left"><a href="https://iao.su/1420/">短地址汇总</a></td><td align="left"><a href="https://iao.su/75/">ip 查询大全</a></td></tr><tr><td align="left"><a href="https://www.iamwawa.cn/">蛙蛙在线工具箱</a></td><td align="left"><a href="https://www.67tool.com/">67 工具箱</a></td><td align="left"><a href="https://www.ygktool.cn/">云极客工具</a></td><td align="left"><a href="https://www.dute.org/">独特工具箱</a></td></tr></tbody></table><h2 id="实用在线工具展开目录"><a href="#实用在线工具展开目录" class="headerlink" title="实用在线工具展开目录"></a>实用在线工具展开目录</h2><table><thead><tr><th align="left"><a href="https://convertio.co/zh/?iao.su">在线格式转换</a></th><th align="left"><a href="https://web.baimiaoapp.com/?iao.su">白描 ocr</a></th><th align="left"><a href="http://unlock.musictool.top/">加密格式音乐解锁</a></th></tr></thead><tbody><tr><td align="left"><a href="https://videoai.perspectivar.com/?iao.su">视频 AI 转换文本</a></td><td align="left"><a href="https://demo.wdssmq.com/tools/codeUrl/">网址汉字移除</a></td><td align="left"><a href="https://tableconvert.com/?iao.su">表格转换工具</a></td></tr><tr><td align="left"><a href="https://tools.pdf24.org/?iao.su">在线 pdf 工具箱</a></td><td align="left"><a href="https://vocalremover.org/ch/?iao.su">音乐剪辑</a></td><td align="left"><a href="https://tool.retiehe.com/marquee">跑马灯</a></td></tr><tr><td align="left"><a href="https://dongci.kawo.com/?iao.su">视频转 gif</a></td><td align="left"><a href="https://guihet.com/tvlistconvert.html">直播源转换</a></td><td align="left"><a href="https://renzhezhilu.gitee.io/webp2jpg-online/">图片转换器</a></td></tr><tr><td align="left"><a href="http://bingoicon.com/?iao.su">在线图标制作</a></td><td align="left"><a href="https://3dimg.com/editor/">图片编辑</a></td><td align="left"><a href="https://www.tool22.com/Tools-ZFBMp3.html">支付宝到账语音</a></td></tr><tr><td align="left"><a href="https://cv.ftqq.com/">冷熊简历</a></td><td align="left"><a href="https://lab.feifanju.com/domain-query/?iao.su">域名查询</a></td><td align="left"><a href="http://blog.luckly-mjw.cn/tool-show/m3u8-downloader/index.html">m3u8 下载</a></td></tr><tr><td align="left"><a href="https://kmcha.com/">相似词查询</a></td><td align="left"><a href="https://torrent2magnet.ixxoo.me/">种子磁立互转</a></td><td align="left"></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常用在线工具&quot;&gt;&lt;a href=&quot;#常用在线工具&quot; class=&quot;headerlink&quot; title=&quot;常用在线工具&quot;&gt;&lt;/a&gt;常用在线工具&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;&lt;a href=&quot;https://mu</summary>
      
    
    
    
    <category term="工具" scheme="https://liuios.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="https://liuios.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>iPhone尺寸大全（包含iPhone14系列）</title>
    <link href="https://liuios.github.io/2023/04/24/iPhone%E5%B0%BA%E5%AF%B8%E5%A4%A7%E5%85%A8%EF%BC%88%E5%8C%85%E5%90%ABiPhone14%E7%B3%BB%E5%88%97%EF%BC%89/"/>
    <id>https://liuios.github.io/2023/04/24/iPhone%E5%B0%BA%E5%AF%B8%E5%A4%A7%E5%85%A8%EF%BC%88%E5%8C%85%E5%90%ABiPhone14%E7%B3%BB%E5%88%97%EF%BC%89/</id>
    <published>2023-04-24T08:34:18.000Z</published>
    <updated>2023-04-24T09:03:53.608Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>机型</th><th align="center">屏幕尺寸（英寸）</th><th>分辨率（pt）</th><th>像素（pixel）</th><th align="left">图片后缀</th></tr></thead><tbody><tr><td>iPhone4/4s</td><td align="center">3.5（326ppi）</td><td>320x480</td><td>640x960</td><td align="left">@2x</td></tr><tr><td>iPhone5/5c/5s/SE</td><td align="center">4  （326ppi）</td><td>320x568</td><td>640x1136</td><td align="left">@2x</td></tr><tr><td>iPhone6/6s/7/8</td><td align="center">4.7 （326ppi）</td><td>375x667</td><td>750x1334</td><td align="left">@2x</td></tr><tr><td>iPhone6/6s/7/8 Plus</td><td align="center">5.5 （401ppi）</td><td>414x736</td><td>1242x2208</td><td align="left">@3x</td></tr><tr><td>iPhoneX/iPhoneXS/11Pro</td><td align="center">5.8（458ppi）</td><td>375x812 （安全区域: (44, 0, 0, 34)）</td><td>1125x2436</td><td align="left">@3x</td></tr><tr><td>iPhoneXR/11</td><td align="center">6.1（326ppi）</td><td>414x896 （安全区域: (48, 0, 0, 34)）</td><td>828x1792</td><td align="left">@2x</td></tr><tr><td>iPhoneXSMax/11ProMax</td><td align="center">6.5（458ppi）</td><td>414x896（安全区域: (47, 0, 0, 34)）</td><td>1242x2688</td><td align="left">@3x</td></tr><tr><td>iPhone12mini（&gt;=iOS14） iPhone13mini（&gt;=iOS15）</td><td align="center">5.4（476ppi）</td><td>360x780 （安全区域: (47, 0, 0, 34)）</td><td>1080x2340</td><td align="left">@3x</td></tr><tr><td>iPhone12/12Pro iPhone13/13Pro</td><td align="center">6.1（460ppi）</td><td>390x844 （安全区域: (47, 0, 0, 34)）</td><td>1170x2532</td><td align="left">@3x</td></tr><tr><td>iPhone12/13ProMax</td><td align="center">6.7（458ppi）</td><td>428x926 （安全区域: (47, 0, 0, 34)）</td><td>1284x2778</td><td align="left">@3x</td></tr><tr><td>iPhone14 （&gt;=iOS16）</td><td align="center">6.1（460ppi）</td><td>390x844 （安全区域: (47, 0, 0, 34)）</td><td>1170x2532</td><td align="left">@3x</td></tr><tr><td>iPhone14 Plus</td><td align="center">6.7（458ppi）</td><td>428x926 （安全区域: (47, 0, 0, 34)）</td><td>1284x2778</td><td align="left">@3x</td></tr><tr><td>iPhone14 Pro</td><td align="center">6.1（460ppi）</td><td>393x852（安全区域: (59, 0, 0, 34)）  适配灵动岛高度  54的状态栏高度  59的安全区域高度</td><td>1179x2556</td><td align="left">@3x</td></tr><tr><td>iPhone14 Pro Max</td><td align="center">6.7（460ppi）</td><td>430x932（安全区域: (59, 0, 0, 34)）  适配灵动岛高度 54的状态栏高度 59的安全区域高度</td><td>1290x2796</td><td align="left">@3x</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;机型&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;屏幕尺寸（英寸）&lt;/th&gt;
&lt;th&gt;分辨率（pt）&lt;/th&gt;
&lt;th&gt;像素（pixel）&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;图片后缀&lt;/th&gt;
&lt;/tr&gt;
&lt;/the</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://liuios.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>react native 配置react-native-web</title>
    <link href="https://liuios.github.io/2022/12/09/react-native-%E9%85%8D%E7%BD%AEreact-native-web/"/>
    <id>https://liuios.github.io/2022/12/09/react-native-%E9%85%8D%E7%BD%AEreact-native-web/</id>
    <published>2022-12-09T02:31:10.000Z</published>
    <updated>2023-04-24T07:37:00.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="react-native-配置react-native-web"><a href="#react-native-配置react-native-web" class="headerlink" title="react native 配置react-native-web"></a>react native 配置react-native-web</h1><p><strong>1.安装依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-dom react-native-web</span><br></pre></td></tr></table></figure><p>webpack相关和 <code>babel-plugin-react-native-web</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add babel-plugin-react-native-web babel-loader url-loader webpack webpack-cli webpack-dev-server html-webpack-plugin --dev</span><br></pre></td></tr></table></figure><p><strong>2.根目录新建 <code>web/webpack.config.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// web/webpack.config.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> appDirectory = path.resolve(__dirname, <span class="string">&#x27;../&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;presets, plugins&#125; = <span class="built_in">require</span>(<span class="string">`<span class="subst">$&#123;appDirectory&#125;</span>/babel.config.js`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> compileNodeModules = [</span><br><span class="line">  <span class="comment">// 这个位置，要加上所有的你用到的RN的库，因为需要把这些RN的库，都通过RNW编译成Web的代码</span></span><br><span class="line"> </span><br><span class="line">  <span class="string">&#x27;@react-navigation/bottom-tabs&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;@react-navigation/native&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;@react-navigation/native-stack&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;@react-navigation/elements&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;@react-navigation/stack&#x27;</span>,</span><br><span class="line">  <span class="comment">// &#x27;react-native-linear-gradient&#x27;,</span></span><br><span class="line">  <span class="string">&#x27;react-native-safe-area-context&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;react-native-screens&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;react-native-root-toast&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;react-native-root-siblings&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;prop-types&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;react-native-storage&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;react-native-svg&#x27;</span>,</span><br><span class="line">].map(<span class="function"><span class="params">moduleName</span> =&gt;</span> path.resolve(appDirectory, <span class="string">`node_modules/<span class="subst">$&#123;moduleName&#125;</span>`</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is needed for webpack to compile JavaScript.</span></span><br><span class="line"><span class="comment">// Many OSS React Native packages are not compiled to ES5 before being</span></span><br><span class="line"><span class="comment">// published. If you depend on uncompiled packages they may cause webpack build</span></span><br><span class="line"><span class="comment">// errors. To fix this webpack can be configured to compile to the necessary</span></span><br><span class="line"><span class="comment">// `node_module`.</span></span><br><span class="line"><span class="keyword">const</span> babelLoaderConfiguration = &#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.(js|jsx|ts|tsx)$/</span>,</span><br><span class="line">  <span class="comment">// Add every directory that needs to be compiled by Babel during the build.</span></span><br><span class="line">  include: [</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;index.web.js&#x27;</span>),</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;App.js&#x27;</span>),</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;src&#x27;</span>),</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;component&#x27;</span>),</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;web&#x27;</span>),</span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;node_modules/react-native-uncompiled&#x27;</span>),</span><br><span class="line">    ...compileNodeModules,</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">use</span>: &#123;</span><br><span class="line">    <span class="attr">loader</span>: <span class="string">&#x27;babel-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">      <span class="attr">cacheDirectory</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// The &#x27;metro-react-native-babel-preset&#x27; preset is recommended to match React Native&#x27;s packager</span></span><br><span class="line">      <span class="comment">//   presets: [&#x27;module:metro-react-native-babel-preset&#x27;],</span></span><br><span class="line">      <span class="comment">// Re-write paths to import only the modules needed by the app</span></span><br><span class="line">      <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="string">&#x27;react-native-web&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;@babel/plugin-proposal-export-namespace-from&#x27;</span>,</span><br><span class="line">        [<span class="string">&#x27;@babel/plugin-proposal-decorators&#x27;</span>, &#123;<span class="attr">legacy</span>: <span class="literal">true</span>&#125;],</span><br><span class="line">        <span class="string">&#x27;react-native-reanimated/plugin&#x27;</span>,</span><br><span class="line">        [</span><br><span class="line">          <span class="string">&#x27;@babel/plugin-transform-modules-commonjs&#x27;</span>,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">allowTopLevelThis</span>: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      ],</span><br><span class="line">      presets,</span><br><span class="line">      <span class="comment">// plugins,</span></span><br><span class="line">      <span class="comment">// env: &#123;</span></span><br><span class="line">      <span class="comment">//   production: &#123;</span></span><br><span class="line">      <span class="comment">//     plugins: [&#x27;transform-remove-console&#x27;],</span></span><br><span class="line">      <span class="comment">//   &#125;,</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> svgLoaderConfiguration = &#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.svg$/</span>,</span><br><span class="line">  use: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">loader</span>: <span class="string">&#x27;@svgr/webpack&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is needed for webpack to import static images in JavaScript files.</span></span><br><span class="line"><span class="keyword">const</span> imageLoaderConfiguration = &#123;</span><br><span class="line">  <span class="attr">test</span>: <span class="regexp">/\.(gif|jpe?g|png|svg)$/</span>,</span><br><span class="line">  use: &#123;</span><br><span class="line">    <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;[name].[ext]&#x27;</span>,</span><br><span class="line">      <span class="attr">esModule</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">entry</span>: [</span><br><span class="line">    <span class="string">&#x27;babel-polyfill&#x27;</span>,</span><br><span class="line">    <span class="comment">// load any web API polyfills</span></span><br><span class="line">    <span class="comment">// path.resolve(appDirectory, &#x27;polyfills-web.js&#x27;),</span></span><br><span class="line">    <span class="comment">// your web-specific entry file</span></span><br><span class="line">    path.resolve(appDirectory, <span class="string">&#x27;index.web.js&#x27;</span>),</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="comment">// configures where the build ends up</span></span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;bundle.web.js&#x27;</span>,</span><br><span class="line">    <span class="attr">path</span>: path.resolve(appDirectory, <span class="string">&#x27;dist&#x27;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...the rest of your config</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">module</span>: &#123;</span><br><span class="line">    <span class="attr">rules</span>: [</span><br><span class="line">      babelLoaderConfiguration,</span><br><span class="line">      imageLoaderConfiguration,</span><br><span class="line">      svgLoaderConfiguration,</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   test: /\.(tsx|ts)$/,</span></span><br><span class="line">      <span class="comment">//   exclude: /node_modules/,</span></span><br><span class="line">      <span class="comment">//   loader: &#x27;ts-loader&#x27;,</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">// This will only alias the exact import &quot;react-native&quot;</span></span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;react-native$&#x27;</span>: <span class="string">&#x27;react-native-web&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// If you&#x27;re working on a multi-platform React Native app, web-specific</span></span><br><span class="line">    <span class="comment">// module implementations should be written in files using the extension</span></span><br><span class="line">    <span class="comment">// `.web.js`.</span></span><br><span class="line">    <span class="attr">extensions</span>: [</span><br><span class="line">      <span class="string">&#x27;.web.js&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.web.jsx&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.js&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.jsx&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.tsx&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.ts&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.web.tsx&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;.web.ts&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;component.js&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">      <span class="attr">template</span>: path.join(__dirname, <span class="string">&#x27;./index.html&#x27;</span>), <span class="comment">// 指定模板路径</span></span><br><span class="line">      <span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>, <span class="comment">// 指定文件名</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.DefinePlugin(&#123;</span><br><span class="line">      <span class="comment">// 此处特别说明，是为了兼容RN和RNW之间的一个全局变量而特别加上的</span></span><br><span class="line">      <span class="comment">// 具体可以看RNW的作者Necolas的说明</span></span><br><span class="line">      <span class="comment">// &lt;https://github.com/necolas/react-native-web/issues/349&gt;</span></span><br><span class="line">      <span class="attr">__DEV__</span>: <span class="built_in">JSON</span>.stringify(<span class="literal">true</span>),</span><br><span class="line">      <span class="attr">process</span>: &#123;<span class="attr">env</span>: &#123;&#125;&#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="keyword">new</span> webpack.EnvironmentPlugin(&#123;<span class="attr">JEST_WORKER_ID</span>: <span class="literal">null</span>&#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3.根目录新建  <code>web/index.html</code> 文件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;meta name=&quot;theme-color&quot; content=&quot;#000000&quot; /&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>安全监测<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jsencrypt/3.0.0-beta.1/jsencrypt.js&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">      <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">700px</span>) &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">          <span class="comment">/* 14/(375/100) */</span></span></span><br><span class="line"><span class="css">          <span class="attribute">font-size</span>: <span class="number">3.73333333333vw</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">      <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">700px</span>) &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">html</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">          <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="comment">/* #app-root &#123;</span></span></span><br><span class="line"><span class="comment"><span class="css">          max-width: 700px;</span></span></span><br><span class="line"><span class="comment"><span class="css">        &#125; */</span></span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="css">            <span class="comment">/* align-items: center; */</span></span></span><br><span class="line"><span class="css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">      <span class="selector-id">#app-root</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="css">        <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">1</span> <span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        <span class="comment">/* height: 100vh; */</span></span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">max-width</span>: <span class="number">700px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">align-self</span>: center;</span></span><br><span class="line"><span class="css">        <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="css">      &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app-root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>4.根目录新建 <code>index.web.js</code> 文件</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.web.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;AppRegistry&#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;name <span class="keyword">as</span> appName&#125; <span class="keyword">from</span> <span class="string">&#x27;./app.json&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line">AppRegistry.registerComponent(appName, <span class="function">() =&gt;</span> App);</span><br><span class="line">AppRegistry.runApplication(appName, &#123;</span><br><span class="line">  <span class="attr">initialProps</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">rootTag</span>: <span class="built_in">document</span>.getElementById(<span class="string">&#x27;app-root&#x27;</span>),</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>5.配置 package.json 启动命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;web&quot;: &quot;webpack serve --mode=development --config ./web/webpack.config.js&quot;,</span><br><span class="line">&quot;build-web&quot;: &quot;webpack --mode=production --config ./web/webpack.config.js&quot;</span><br></pre></td></tr></table></figure><p><strong>6.现在可以启动项目了</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn web</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;react-native-配置react-native-web&quot;&gt;&lt;a href=&quot;#react-native-配置react-native-web&quot; class=&quot;headerlink&quot; title=&quot;react native 配置react-native-we</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="react-native" scheme="https://liuios.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>搞懂DNS</title>
    <link href="https://liuios.github.io/2022/02/16/%E6%90%9E%E6%87%82DNS/"/>
    <id>https://liuios.github.io/2022/02/16/%E6%90%9E%E6%87%82DNS/</id>
    <published>2022-02-16T07:55:35.000Z</published>
    <updated>2023-04-24T07:37:00.893Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是DNS"><a href="#什么是DNS" class="headerlink" title="什么是DNS"></a>什么是DNS</h2><p>DNS 即域名系统，全称是 <strong>D</strong>omain <strong>N</strong>ame <strong>S</strong>ystem。当我们在浏览器输入一个 URL 地址时，浏览器要向这个 URL 的主机名对应的服务器发送请求，就得知道服务器的 IP，对于浏览器来说，DNS 的作用就是将<strong>主机名转换成 IP 地址</strong>。下面是摘自《计算机网络：自顶向下方法》的概念：</p><blockquote><p> DNS 是：</p><ol><li>一个由分层的 DNS 服务器实现的<strong>分布式数据库</strong></li><li>一个使得主机能够查询分布式数据库的<strong>应用层协议</strong></li></ol></blockquote><p>也就是，DNS 是一个应用层协议，我们发送一个请求，其中包含我们要查询的主机名，它就会给我们返回这个主机名对应的 IP；</p><p>其次，DNS是一个分布式数据库，整个DNS系统由分散在世界各地的很多台DNS服务器组成，每台DNS服务器上都保存了一些数据，这些数据可以让我们最终查到主机名对应的IP。</p><p><strong>所以 DNS 的查询过程，说白了，就是去向这些 DNS 服务器询问，你知道这个主机名的 IP 是多少吗，不知道？那你知道去哪台 DNS 服务器上可以查到吗？直到查到我想要的 IP 为止。</strong></p><h2 id="分布式、层次数据库"><a href="#分布式、层次数据库" class="headerlink" title="分布式、层次数据库"></a>分布式、层次数据库</h2><h3 id="什么是分布式？"><a href="#什么是分布式？" class="headerlink" title="什么是分布式？"></a>什么是分布式？</h3><p>这个世界上没有一台 DNS 服务器拥有因特网上所有主机的映射，每台 DNS 只负责部分映射。</p><h3 id="什么是层次？"><a href="#什么是层次？" class="headerlink" title="什么是层次？"></a>什么是层次？</h3><p>DNS 服务器有 3 种类型：根 DNS 服务器、顶级域（Top-Level Domain, TLD）DNS 服务器和权威 DNS 服务器。它们的层次结构如下图所示：</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/123_2022-02-16_16-12-42-20220216162240899.png"></p><p>图片来源：《计算机网络：自顶向下方法》</p><ul><li>根 DNS 服务器</li></ul><p>首先我们要明确根域名是什么，比如 <code>www.baidu.com</code>，有些同学可能会误以为 <code>com</code> 就是根域名，其实 <code>com</code> 是顶级域名，<code>www.baidu.com</code> 的完整写法是 <code>www.baidu.com.</code>，最后的这个 <code>.</code> 就是根域名。</p><p>根 DNS 服务器的作用是什么呢？就是管理它的下一级，也就是顶级域 DNS 服务器。通过询问根 DNS 服务器，我们可以知道一个主机名对应的顶级域 DNS 服务器的 IP 是多少，从而继续向顶级域 DNS 服务器发起查询请求。</p><ul><li>顶级域 DNS 服务器</li></ul><p>除了前面提到的 <code>com</code> 是顶级域名，常见的顶级域名还有 <code>cn</code>、<code>org</code>、<code>edu</code> 等。顶级域 DNS 服务器，也就是 TLD，提供了它的下一级，也就是权威 DNS 服务器的 IP 地址。</p><ul><li>权威 DNS 服务器</li></ul><p>权威 DNS 服务器可以返回主机 - IP 的最终映射。</p><p>关于这几个层次的服务器之间是怎么交互的，接下来我们会讲到 DNS 具体的查询过程，结合查询过程，大家就不难理解它们之间的关系了。</p><h2 id="本地DNS服务器"><a href="#本地DNS服务器" class="headerlink" title="本地DNS服务器"></a>本地DNS服务器</h2><p>之前对 DNS 有过了解的同学可能会发现，上一节的 DNS 层次结构，为什么没有提到本地 DNS 服务器？因为<strong>严格来说，本地 DNS 服务器并不属于 DNS 的层次结构</strong>，但它对 DNS 层次结构是至关重要的。那什么是本地 DNS 服务器呢？</p><p>每个 ISP 都有一台本地 DNS 服务器，比如一个居民区的 ISP、一个大学的 ISP、一个机构的 ISP，都有一台或多台本地 DNS 服务器。当主机发出 DNS 请求时，该请求被发往本地 DNS 服务器，<strong>本地 DNS 服务器起着代理的作用</strong>，并负责将该请求<strong>转发</strong>到 DNS 服务器层次结构中。</p><p>接下来就让我们通过一个简单的例子，看看 DNS 的查询过程是怎样的，看看客户端、本地 DNS 服务器、DNS 服务器层次结构之间是如何交互的。</p><h2 id="递归查询、迭代查询"><a href="#递归查询、迭代查询" class="headerlink" title="递归查询、迭代查询"></a>递归查询、迭代查询</h2><p>如下图，假设主机 <code>m.n.com</code> 想要获取主机 <code>a.b.com</code> 的 IP 地址，会经过以下几个步骤：</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20220216162649_2022-02-16_16-30-27.png" alt="20220216162649_2022-02-16_16-30-27"></p><ol><li><p>首先，主机 <code>m.n.com</code> 向它的本地 DNS 服务器发送一个 DNS 查询报文，其中包含期待被转换的主机名 <code>a.b.com</code>；</p></li><li><p>本地 DNS 服务器将该报文转发到根 DNS 服务器；</p></li><li><p>该根 DNS 服务器注意到 <code>com</code> 前缀，便向本地 DNS 服务器返回 <code>com</code> 对应的顶级域 DNS 服务器（TLD）的 IP 地址列表。</p></li></ol><p>​        意思就是，我不知道 <code>a.b.com</code> 的 IP，不过这些 TLD 服务器可能知道，你去问他们吧；</p><ol start="4"><li><p>本地 DNS 服务器则向其中一台 TLD 服务器发送查询报文；</p></li><li><p>该 TLD 服务器注意到 <code>b.com</code> 前缀，便向本地 DNS 服务器返回权威 DNS 服务器的 IP 地址。</p></li></ol><p>​        意思就是，我不知道 <code>a.b.com</code> 的 IP，不过这些权威服务器可能知道，你去问他们吧；</p><ol start="6"><li><p>本地 DNS 服务器又向其中一台权威服务器发送查询报文；</p></li><li><p>终于，该权威服务器返回了 <code>a.b.com</code> 的 IP 地址；</p></li><li><p>本地 DNS 服务器将 <code>a.b.com</code> 跟 IP 地址的映射返回给主机 <code>m.n.com</code>，<code>m.n.com</code> 就可以用该 IP 向 <code>a.b.com</code> 发送请求啦。</p></li></ol><p>主机 <code>m.n.com</code> 向本地 DNS 服务器 <code>dns.n.com</code> 发出的查询就是<strong>递归查询</strong>，这个查询是主机 <code>m.n.com</code> 以自己的名义向本地 DNS 服务器请求想要的 IP 映射，并且本地 DNS 服务器直接返回映射结果给到主机。</p><p>而后继的三个查询是<strong>迭代查询</strong>，包括本地 DNS 服务器向根 DNS 服务器发送查询请求、本地 DNS 服务器向 TLD 服务器发送查询请求、本地 DNS 服务器向权威 DNS 服务器发送查询请求，<strong>所有的请求都是由本地 DNS 服务器发出，所有的响应都是直接返回给本地 DNS 服务器</strong>。</p><p>那么问题来了，所有的 DNS 查询都必须遵循这种<strong>递归 + 迭代</strong>的模式吗？</p><p>当然不是。</p><p>从理论上讲，<strong>任何 DNS 查询既可以是递归的，也可以是迭代的</strong>。下图的所有查询就都是递归的，不包含迭代。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20220216163701_2022-02-16_16-38-16.png" alt="20220216163701_2022-02-16_16-38-16"></p><p>那么，TLD 一定知道权威 DNS 服务器的 IP 地址吗？</p><p>还真不一定，有时 TLD 只是知道中间的某个 DNS 服务器，再由这个中间 DNS 服务器去找到权威 DNS 服务器。这种时候，整个查询过程就需要更多的 DNS 报文。</p><h2 id="DNS缓存"><a href="#DNS缓存" class="headerlink" title="DNS缓存"></a>DNS缓存</h2><p>为了让我们更快的拿到想要的 IP，DNS 广泛使用了缓存技术。DNS 缓存的原理非常简单，在一个 DNS 查询的过程中，当某一台 DNS 服务器接收到一个 DNS 应答（例如，包含某主机名到 IP 地址的映射）时，它就能够将映射缓存到本地，下次查询就可以直接用缓存里的内容。当然，缓存并不是永久的，每一条映射记录都有一个对应的生存时间，一旦过了生存时间，这条记录就应该从缓存移出。</p><p>事实上，<strong>有了缓存，大多数 DNS 查询都绕过了根 DNS 服务器</strong>，需要向根 DNS 服务器发起查询的请求很少。</p><p>参考：<a href="https://juejin.cn/post/6990344840181940261">https://juejin.cn/post/6990344840181940261</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是DNS&quot;&gt;&lt;a href=&quot;#什么是DNS&quot; class=&quot;headerlink&quot; title=&quot;什么是DNS&quot;&gt;&lt;/a&gt;什么是DNS&lt;/h2&gt;&lt;p&gt;DNS 即域名系统，全称是 &lt;strong&gt;D&lt;/strong&gt;omain &lt;strong&gt;N&lt;/stron</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="网络" scheme="https://liuios.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>iOS 如何让编译器跳过不支持模拟器的.a文件</title>
    <link href="https://liuios.github.io/2022/01/18/iOS-%E5%A6%82%E4%BD%95%E8%AE%A9%E7%BC%96%E8%AF%91%E5%99%A8%E8%B7%B3%E8%BF%87%E4%B8%8D%E6%94%AF%E6%8C%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84-a%E6%96%87%E4%BB%B6/"/>
    <id>https://liuios.github.io/2022/01/18/iOS-%E5%A6%82%E4%BD%95%E8%AE%A9%E7%BC%96%E8%AF%91%E5%99%A8%E8%B7%B3%E8%BF%87%E4%B8%8D%E6%94%AF%E6%8C%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84-a%E6%96%87%E4%BB%B6/</id>
    <published>2022-01-18T06:27:55.000Z</published>
    <updated>2023-04-24T07:37:00.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我们在开发中经常会接入第三方的静态库.a 文件，有的静态库文件支持的架构比较多 x86、arm64、arm7s、arm7这样我们编译的时候不会出错。但是支持的架构越多最后生成的ipa包就越大，比如x86的架构，生产环境根本用不到，许多第三方给出的.a文件就不会包含这个架构。这样就只能真机运行测试了。那我们想用模拟器测试怎么办呢？下面给出两种解决办法。</p></blockquote><h2 id="规避法"><a href="#规避法" class="headerlink" title="规避法"></a>规避法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#if TARGET_IPHONE_SIMULATOR</span><br><span class="line">    </span><br><span class="line">#else</span><br><span class="line">  //调用第三方.a文件中的方法</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><h2 id="补全法"><a href="#补全法" class="headerlink" title="补全法"></a>补全法</h2><ol><li>新建一个同名的工程</li><li>把第三方库的头文件都拷贝进去</li><li>把所有借口都使用假函数实现一遍，然后编译出模拟器版本</li><li>把第三方的静态库lib1.a和我们编译出来的lib2.a合并<code>lipo -create lib1.a lib2.a -output libXATA.a</code></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我们在开发中经常会接入第三方的静态库.a 文件，有的静态库文件支持的架构比较多 x86、arm64、arm7s、arm7这样我们编译的时候不会出错。但是支持的架构越多最后生成的ipa包就越大，比如x86的架构，生产环境根本用不到，许多第三方给出的.</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://liuios.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>react native ios 滚动条位置异常</title>
    <link href="https://liuios.github.io/2022/01/13/react-native-ios-%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E5%BC%82%E5%B8%B8/"/>
    <id>https://liuios.github.io/2022/01/13/react-native-ios-%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BD%8D%E7%BD%AE%E5%BC%82%E5%B8%B8/</id>
    <published>2022-01-13T02:14:38.000Z</published>
    <updated>2023-04-24T07:37:00.968Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React native ScrollView FlatList 滚动条位置异常、错位</p></blockquote><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220113144619480.png" alt="image-20220113144619480"></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>ScrollView 增加属性</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrollIndicatorInsets=&#123;&#123; right: 1 &#125;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在根目录 index.js 中添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import &#123; ScrollView &#125; from &#x27;react-native&#x27;;</span><br><span class="line"></span><br><span class="line">ScrollView.defaultProps = ScrollView.defaultProps || &#123;&#125;;</span><br><span class="line">ScrollView.defaultProps.automaticallyAdjustsScrollIndicatorInsets = false;</span><br></pre></td></tr></table></figure><p>参考</p><p><a href="https://links.jianshu.com/go?to=https://github.com/facebook/react-native/issues/26610">https://github.com/facebook/react-native/issues/26610</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React native ScrollView FlatList 滚动条位置异常、错位&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.staticaly.com/gh/LiuIos/picBed@master</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="react-native" scheme="https://liuios.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>图床工具PicGo</title>
    <link href="https://liuios.github.io/2022/01/05/%E5%9B%BE%E5%BA%8A%E5%B7%A5%E5%85%B7PicGo/"/>
    <id>https://liuios.github.io/2022/01/05/%E5%9B%BE%E5%BA%8A%E5%B7%A5%E5%85%B7PicGo/</id>
    <published>2022-01-05T07:26:09.000Z</published>
    <updated>2023-04-24T07:44:42.393Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 Picgo+Github 搭建个人图床，为本地图片添加外部链接。</p></blockquote><h2 id="1-创建-GitHub-仓库"><a href="#1-创建-GitHub-仓库" class="headerlink" title="1. 创建 GitHub 仓库"></a>1. 创建 GitHub 仓库</h2><blockquote><p>注意事项：仓库类型要选择 public，否则访问不到图片</p></blockquote><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20220105155417.png"></p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20220105155800.png"></p><h2 id="2-获取-token"><a href="#2-获取-token" class="headerlink" title="2.获取 token"></a>2.获取 token</h2><ol><li>创建完成后进入，选择右上角的 Settings</li></ol><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105160218992.png" alt="image-20220105160218992"></p><ol start="2"><li>选择 Developer settings</li></ol><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105160501024.png" alt="image-20220105160501024"></p><p>3.选择 Personal access tokens，然后点击 Generate new token</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105160724298.png" alt="image-20220105160724298"></p><ol start="4"><li>填写一下 Note，过期时间选择无期限，并勾选 repo 即可，拉到页面最下方确认提交</li></ol><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105161002173.png" alt="image-20220105161002173"></p><ol start="5"><li><p>创建完成后，即可看到 token。这个值一定要保存下来，因为只显示一次。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20220105161311.png"></p></li></ol><h2 id="3-PicGo-设置"><a href="#3-PicGo-设置" class="headerlink" title="3. PicGo 设置"></a>3. PicGo 设置</h2><p>1.<a href="https://molunerfinn.com/PicGo/">下载 Picgo</a>，选择你所需的版本</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105163228252.png" alt="image-20220105163228252"></p><ol start="2"><li><p>配置 GitHub 图床</p><blockquote><p>仓库名、分支、token</p></blockquote><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105163548415.png" alt="image-20220105163548415"></p></li><li><p>配置好后，就能上传图片了。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105163837173.png" alt="image-20220105163837173"></p></li></ol><h2 id="4-搭配-CDN-使用"><a href="#4-搭配-CDN-使用" class="headerlink" title="4.搭配 CDN 使用"></a>4.搭配 CDN 使用</h2><blockquote><p>使用 GitHub 仓库作为图床，存在的问题是国内访问 github 的速度很慢，可以利用 <a href="https://www.jsdelivr.com/?docs=gh">jsDelivr CDN</a> 来加速访问。jsDelivr 是一个免费开源的 CDN 解决方案，该平台是首个打通中国大陆与海外的免费 CDN 服务，拥有中国政府颁发的 ICP 许可证，无须担心中国防火墙问题而影响使用。使用 jsDelivr 加速访问，需要将自定义域名设置为<code>https://cdn.jsdelivr.net/gh/用户名/图床仓库名/</code>。</p></blockquote><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105164501818.png" alt="image-20220105164501818"></p><p>加上 cdn 后图片访问速度飞快。</p><p>测试： <a href="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105164501818.png">https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105164501818.png</a></p><blockquote><p><a href="https://cdn.jsdelivr.net/gh">https://cdn.jsdelivr.net/gh</a></p><p>失效了 改成</p><p><a href="https://cdn.staticaly.com/gh/[github%E7%94%A8%E6%88%B7%E5%90%8D]/[%E4%BB%93%E5%BA%93%E5%90%8D]@master/">https://cdn.staticaly.com/gh/[github用户名]/[仓库名]@master/</a></p></blockquote><h2 id="5-Typora-配置图床"><a href="#5-Typora-配置图床" class="headerlink" title="5.Typora 配置图床"></a>5.Typora 配置图床</h2><p>Typora 是最好用的 Markdown 编辑器，还可以搭配图床一起使用，非常 nice ～</p><ol><li>PicGO 设置 Server</li></ol><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105165803914.png" alt="image-20220105165803914"></p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105165845304.png" alt="image-20220105165845304"></p><ol start="2"><li><p>Typora 设置</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105165929721.png" alt="image-20220105165929721"></p></li></ol><p>右键上传就行了。</p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/image-20220105170127016.png" alt="image-20220105170127016"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用 Picgo+Github 搭建个人图床，为本地图片添加外部链接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-创建-GitHub-仓库&quot;&gt;&lt;a href=&quot;#1-创建-GitHub-仓库&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="工具" scheme="https://liuios.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>React Native 搭配 MobX 使用心得</title>
    <link href="https://liuios.github.io/2021/09/09/React-Native-%E6%90%AD%E9%85%8D-MobX-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>https://liuios.github.io/2021/09/09/React-Native-%E6%90%AD%E9%85%8D-MobX-%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</id>
    <published>2021-09-09T02:56:39.000Z</published>
    <updated>2023-04-24T07:37:00.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="React-Native-使用-MobX"><a href="#React-Native-使用-MobX" class="headerlink" title="React Native 使用 MobX"></a>React Native 使用 MobX</h2><p><a href="https://zh.mobx.js.org/README.html">MobX</a> 是一个用于状态管理的<a href="https://codingislove.com/tag/javascript/">Javascript</a>库，它通过运用透明的函数式响应编程（Transparent Functional Reactive Programming，TFRP）使状态管理变得简单和可扩展，与React Native一起使用效果很好。</p><h3 id="安装-Mobx-和-Mobx-react"><a href="#安装-Mobx-和-Mobx-react" class="headerlink" title="安装 Mobx 和 Mobx-react"></a>安装 Mobx 和 Mobx-react</h3><p>Mobx 是主要的库，而 mobx-react 具有用于 react 的 mobx 绑定。使用以下命令安装 Mobx 和 Mobx-react：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add mobx mobx-react</span><br></pre></td></tr></table></figure><h3 id="启用-Mobx-装饰器语法"><a href="#启用-Mobx-装饰器语法" class="headerlink" title="启用 Mobx 装饰器语法"></a>启用 Mobx 装饰器语法</h3><p>你也可以在没有装饰器语法的情况下使用 Mobx，但是使用装饰器可以简化代码，所以让我们启用它。</p><p>使用以下命令为装饰器安装 babel 插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add --dev @babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties</span><br></pre></td></tr></table></figure><p>并在 <code>.babelrc</code>文件中启用（注意，插件的顺序很重要）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;plugins&quot;: [</span><br><span class="line">        [&quot;@babel/plugin-proposal-decorators&quot;, &#123; &quot;legacy&quot;: true &#125;],</span><br><span class="line">        [&quot;@babel/plugin-proposal-class-properties&quot;, &#123; &quot;loose&quot;: false &#125;]</span><br><span class="line">        // 与MobX 4/5不同的是, &quot;loose&quot; 必须为 false!    ^</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何使用React上下文设置-Mobx"><a href="#如何使用React上下文设置-Mobx" class="headerlink" title="如何使用React上下文设置 Mobx"></a>如何使用React上下文设置 Mobx</h2><p>让我们看看如何使用 react 和 react 上下文来设置 Mobx。</p><h3 id="什么是react上下文？"><a href="#什么是react上下文？" class="headerlink" title="什么是react上下文？"></a>什么是react上下文？</h3><p>Context 提供了一种通过组件树传递数据的方法，而无需在每个级别手动向下传递 props。简单来说，React 上下文用于将一些数据存储在一个地方并在整个应用程序中使用它。每次修改上下文中的数据时，组件也会重新渲染。如果我们不使用上下文，那么我们将使用 props 手动传递数据。</p><p>从技术上讲，Mobx 和其他状态管理库也做同样的事情，但功能更多</p><h3 id="设置一个基本的-Mobx-store"><a href="#设置一个基本的-Mobx-store" class="headerlink" title="设置一个基本的 Mobx store"></a>设置一个基本的 Mobx store</h3><p>转到react native程序中的 src 文件夹，创建一个名为的文件夹<code>services</code>并创建一个名为的文件<code>store.js</code></p><p>转到新创建的<code>store.js</code>文件并粘贴以下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; action, observable &#125; <span class="keyword">from</span> <span class="string">&quot;mobx&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Store start */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Store</span> </span>&#123;</span><br><span class="line">  @observable title = <span class="string">&quot;Coding is Love&quot;</span>;</span><br><span class="line"> </span><br><span class="line">  @observable user = &#123;</span><br><span class="line">    <span class="attr">userId</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Ranjith kumar V&quot;</span>,</span><br><span class="line">    <span class="attr">website</span>: <span class="string">&quot;https://codingislove.com&quot;</span>,</span><br><span class="line">    <span class="attr">email</span>: <span class="string">&quot;ranjith@codingislove.com&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line"> </span><br><span class="line">  @action</span><br><span class="line">  <span class="function"><span class="title">setUser</span>(<span class="params">user</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.user = user;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  @action</span><br><span class="line">  <span class="function"><span class="title">updateUser</span>(<span class="params">data</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.user = &#123; ...this.user, ...data &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  @action</span><br><span class="line">  <span class="function"><span class="title">clearUser</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.user = <span class="literal">undefined</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  @action</span><br><span class="line">  <span class="function"><span class="title">setTitle</span>(<span class="params">title</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.title = title;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Store end */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Store helpers */</span></span><br><span class="line"><span class="keyword">const</span> StoreContext = React.createContext();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> StoreProvider = <span class="function">(<span class="params">&#123; children, store &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">StoreContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;store&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StoreContext.Provider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* Hook to use store in any functional component */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = <span class="function">() =&gt;</span> React.useContext(StoreContext);</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* HOC to inject store to any functional or class component */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> withStore = <span class="function">(<span class="params">Component</span>) =&gt;</span> <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Component</span> &#123;<span class="attr">...props</span>&#125; <span class="attr">store</span>=<span class="string">&#123;useStore()&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="store说明"><a href="#store说明" class="headerlink" title="store说明"></a>store说明</h3><p>它是一个非常简单的存储，带有一个用于存储用户数据的用户对象、一个标题字符串、一些修改用户和标题的函数。<code>@observable</code><strong>用于告诉 mobx 在修改 observable 属性时重新渲染组件。</strong></p><p><code>@action</code>是一个用于修改 observable 的函数。运行一个<code>@actions</code>也会触发<code>autoRun</code>如果您设置了其中任何一个，函数。</p><p>useStore 是我们的自定义钩子，用于在任何功能组件中使用 mobx 存储</p><p>withStore 是一个自定义 HOC（高阶组件），可以在任何类组件中使用 mobx 存储。</p><h3 id="Mobx-使用"><a href="#Mobx-使用" class="headerlink" title="Mobx 使用"></a>Mobx 使用</h3><p>转到App.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">&quot;./screens/Home&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Store, &#123; StoreProvider &#125; <span class="keyword">from</span> <span class="string">&quot;./services/store&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Store();</span><br><span class="line"><span class="comment">/* Create a new store */</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">StoreProvider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">Home</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">StoreProvider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure><p>Home.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">&quot;../logo.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;../App.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&quot;mobx-react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; withStore &#125; <span class="keyword">from</span> <span class="string">&quot;../services/store&quot;</span>;</span><br><span class="line"> </span><br><span class="line">@withStore</span><br><span class="line">@observer</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Home</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  toggleTitle = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; store &#125; = <span class="built_in">this</span>.props;</span><br><span class="line">    <span class="keyword">if</span> (store.title === <span class="string">&quot;Coding is Love&quot;</span>) &#123;</span><br><span class="line">      store.setTitle(<span class="string">&quot;Mobx React Context&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      store.setTitle(<span class="string">&quot;Coding is Love&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; store &#125; = <span class="built_in">this</span>.props;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;App&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;App-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#123;logo&#125;</span> <span class="attr">className</span>=<span class="string">&quot;App-logo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;logo&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">a</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">className</span>=<span class="string">&quot;App-link&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">href</span>=<span class="string">&quot;https://codingislove.com&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">rel</span>=<span class="string">&quot;noopener noreferrer&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">          &gt;</span></span></span><br><span class="line"><span class="xml">            &#123;store.title&#125;</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.toggleTitle&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> <span class="attr">20</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="xml">            Toggle title</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Home;</span><br></pre></td></tr></table></figure><h3 id="功能组件使用-useStore-钩子"><a href="#功能组件使用-useStore-钩子" class="headerlink" title="功能组件使用 useStore 钩子"></a>功能组件使用 useStore 钩子</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; observer &#125; <span class="keyword">from</span> <span class="string">&quot;mobx-react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;../services/store&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> Username = observer(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> store = useStore();</span><br><span class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> <span class="attr">14</span> &#125;&#125;&gt;</span>- By &#123;store.user.name&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Username;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;React-Native-使用-MobX&quot;&gt;&lt;a href=&quot;#React-Native-使用-MobX&quot; class=&quot;headerlink&quot; title=&quot;React Native 使用 MobX&quot;&gt;&lt;/a&gt;React Native 使用 MobX&lt;/h2&gt;&lt;</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="react-native" scheme="https://liuios.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>Android打包混淆出现java.lang.OutOfMemoryError: Java heap space</title>
    <link href="https://liuios.github.io/2021/09/08/Android%E6%89%93%E5%8C%85%E6%B7%B7%E6%B7%86%E5%87%BA%E7%8E%B0java-lang-OutOfMemoryError-Java-heap-space/"/>
    <id>https://liuios.github.io/2021/09/08/Android%E6%89%93%E5%8C%85%E6%B7%B7%E6%B7%86%E5%87%BA%E7%8E%B0java-lang-OutOfMemoryError-Java-heap-space/</id>
    <published>2021-09-08T02:56:42.000Z</published>
    <updated>2021-09-16T08:22:59.449Z</updated>
    
    <content type="html"><![CDATA[<p>配置 gradle.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError</span><br><span class="line">org.gradle.daemon=true</span><br><span class="line">org.gradle.parallel=true</span><br><span class="line">org.gradle.configureondemand=true</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;配置 gradle.properties&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Android" scheme="https://liuios.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>系统签名app运行webview闪退问题</title>
    <link href="https://liuios.github.io/2021/09/08/%E7%B3%BB%E7%BB%9F%E7%AD%BE%E5%90%8Dapp%E8%BF%90%E8%A1%8Cwebview%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/"/>
    <id>https://liuios.github.io/2021/09/08/%E7%B3%BB%E7%BB%9F%E7%AD%BE%E5%90%8Dapp%E8%BF%90%E8%A1%8Cwebview%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/</id>
    <published>2021-09-08T02:40:14.000Z</published>
    <updated>2023-04-24T07:37:00.950Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开发定制Android系统应用时，系统签名后app闪退</p><p><code>java.lang.UnsupportedOperationException: For security reasons, WebView is not allowed in privileged processes</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hookWebView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sdkInt = Build.VERSION.SDK_INT;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; factoryClass = Class.forName(<span class="string">&quot;android.webkit.WebViewFactory&quot;</span>);</span><br><span class="line">            Field field = factoryClass.getDeclaredField(<span class="string">&quot;sProviderInstance&quot;</span>);</span><br><span class="line">            field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Object sProviderInstance = field.get(<span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (sProviderInstance != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;hookWebView==&quot;</span>,<span class="string">&quot;sProviderInstance isn&#x27;t null&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Method getProviderClassMethod;</span><br><span class="line">            <span class="keyword">if</span> (sdkInt &gt; <span class="number">22</span>) &#123; <span class="comment">// above 22</span></span><br><span class="line">                getProviderClassMethod = factoryClass.getDeclaredMethod(<span class="string">&quot;getProviderClass&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sdkInt == <span class="number">22</span>) &#123; <span class="comment">// method name is a little different</span></span><br><span class="line">                getProviderClassMethod = factoryClass.getDeclaredMethod(<span class="string">&quot;getFactoryClass&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">// no security check below 22</span></span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;hookWebView==&quot;</span>,<span class="string">&quot;Don&#x27;t need to Hook WebView&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            getProviderClassMethod.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Class&lt;?&gt; providerClass = (Class&lt;?&gt;) getProviderClassMethod.invoke(factoryClass);</span><br><span class="line">            Class&lt;?&gt; delegateClass = Class.forName(<span class="string">&quot;android.webkit.WebViewDelegate&quot;</span>);</span><br><span class="line">            Constructor&lt;?&gt; providerConstructor = providerClass.getConstructor(delegateClass);</span><br><span class="line">            <span class="keyword">if</span> (providerConstructor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                providerConstructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                Constructor&lt;?&gt; declaredConstructor = delegateClass.getDeclaredConstructor();</span><br><span class="line">                declaredConstructor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                sProviderInstance = providerConstructor.newInstance(declaredConstructor.newInstance());</span><br><span class="line"></span><br><span class="line">                Log.d(<span class="string">&quot;hookWebView==&quot;</span>,<span class="string">&quot;sProviderInstance:&#123;&#125;&quot;</span>);</span><br><span class="line">                field.set(<span class="string">&quot;sProviderInstance&quot;</span>, sProviderInstance);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Log.d(<span class="string">&quot;hookWebView==&quot;</span>,<span class="string">&quot;Hook done!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line"></span><br><span class="line">            Log.d(<span class="string">&quot;hookWebView==&quot;</span>,e.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;开发定制Android系统应用时，系统签名后app闪退&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java.lang.UnsupportedOperationException: For security reasons, WebView is not allow</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Android" scheme="https://liuios.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>iOS 启动图尺寸适配</title>
    <link href="https://liuios.github.io/2021/09/08/iOS-%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%B0%BA%E5%AF%B8%E9%80%82%E9%85%8D/"/>
    <id>https://liuios.github.io/2021/09/08/iOS-%E5%90%AF%E5%8A%A8%E5%9B%BE%E5%B0%BA%E5%AF%B8%E9%80%82%E9%85%8D/</id>
    <published>2021-09-08T02:02:08.000Z</published>
    <updated>2023-04-24T07:37:00.985Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在 iOS 开发早期，启动图适配，可以通过自定义 LaunchImage 通过设置多张图片来实现通过尺寸的适配，2020 年 4 月开始，所有使用 iOS 13 SDK 的 App 都必须提供 LaunchScreen 如果使用 LaunchScreen 一张图来适配所有尺寸的 iPhone 是一定不够的，不同程度的拉伸是不可避免的，解决办法 👇</p></blockquote><p><strong>方法一</strong></p><p>LaunchScreen 中写自定义布局，把 LaunchScreen 当做一个页面，里面不仅仅可以放图片，也来用来放其他 view,这样，重新布局，来实现我们想要的启动页就很容易实现了，这种也是官方推荐的方法</p><p><strong>方法二</strong></p><p>仍然使用类似于 LaunchImage 的方法来实现，通过配置多张图片的方式，来达到多图适配的问题</p><ol><li>在 Assets.xcasset 中新建一个 Image Set，并配置</li><li>拷贝如下 xml 内容到 Contents.json 中,并配置尺寸的图片到指定位置，设置只支持 iPhone 图片</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;images&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;1125x2436.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;1x&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;640x960.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;2x&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;1125x2436.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;3x&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;640x1136.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;1x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;retina4&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;640x1136.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;2x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;retina4&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;640x1136.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;3x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;retina4&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;1242x2208.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;3x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;736h&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;750x1334.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;2x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;667h&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;1125x2436.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;3x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;2436h&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;1242x2688.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;3x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;2688h&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;filename&quot;</span>: <span class="string">&quot;828x1792.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;idiom&quot;</span>: <span class="string">&quot;iphone&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;scale&quot;</span>: <span class="string">&quot;2x&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;subtype&quot;</span>: <span class="string">&quot;1792h&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;info&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;xcode&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.设置好后，把图片加入到 LaunchImage 中，设置好约束，并把 contentMode 设置为<code>Scale to Fill</code></p><p>删除 app 重新运行就能看到效果了。</p><p>记录一下 Android 启动图尺寸</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">android 启动图尺寸</span><br><span class="line"></span><br><span class="line">mdpi —— 360x640px</span><br><span class="line">hdpi —— 540x960px</span><br><span class="line">xhdpi —— 720x1280px</span><br><span class="line">xxhdpi —— 1080x1920px</span><br><span class="line">xxxhdpi —— 1440x2560px</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在 iOS 开发早期，启动图适配，可以通过自定义 LaunchImage 通过设置多张图片来实现通过尺寸的适配，2020 年 4 月开始，所有使用 iOS 13 SDK 的 App 都必须提供 LaunchScreen 如果使用 LaunchScr</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Android" scheme="https://liuios.github.io/tags/Android/"/>
    
    <category term="iOS" scheme="https://liuios.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>android 多个图表闪退</title>
    <link href="https://liuios.github.io/2021/09/07/android-%E5%A4%9A%E4%B8%AA%E5%9B%BE%E8%A1%A8%E9%97%AA%E9%80%80/"/>
    <id>https://liuios.github.io/2021/09/07/android-%E5%A4%9A%E4%B8%AA%E5%9B%BE%E8%A1%A8%E9%97%AA%E9%80%80/</id>
    <published>2021-09-07T10:56:54.000Z</published>
    <updated>2021-09-07T10:59:18.885Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">webView组件加</span><br><span class="line">androidHardwareAccelerationDisabled</span><br><span class="line">属性 关闭硬件加速</span><br><span class="line"></span><br><span class="line">在库中，WebView组件添加androidHardwareAccelerationDisabled属性，关闭android硬件加速</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="react-native" scheme="https://liuios.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>Mac sourcetree自动添加ssh key</title>
    <link href="https://liuios.github.io/2021/09/07/Mac-sourcetree%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0ssh-key/"/>
    <id>https://liuios.github.io/2021/09/07/Mac-sourcetree%E8%87%AA%E5%8A%A8%E6%B7%BB%E5%8A%A0ssh-key/</id>
    <published>2021-09-07T10:23:12.000Z</published>
    <updated>2023-04-24T07:37:01.033Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生成sshkey</span><br><span class="line">执行ssh-add ~/.ssh/id_rsa 将sshkey添加到sourceTree</span><br><span class="line">执行ssh-add -K ~/.ssh/id_rsa 将sshkey添加到钥匙串</span><br><span class="line">cd 到 .ssh目录下, 用touch config命令创建config文件</span><br><span class="line">执行open config, 打开config文件.</span><br><span class="line">输入下面的配置内容, 保存·config文件</span><br></pre></td></tr></table></figure><p>config</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">   UseKeychain yes</span><br><span class="line">   AddKeysToAgent yes</span><br><span class="line">   IdentityFile ~/.ssh/id_rsa</span><br><span class="line">   IdentityFile ~/.ssh/github_rsa</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="SourceTree" scheme="https://liuios.github.io/tags/SourceTree/"/>
    
  </entry>
  
  <entry>
    <title>react-native修改第三方包</title>
    <link href="https://liuios.github.io/2021/09/07/react-native%E4%BF%AE%E6%94%B9%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85/"/>
    <id>https://liuios.github.io/2021/09/07/react-native%E4%BF%AE%E6%94%B9%E7%AC%AC%E4%B8%89%E6%96%B9%E5%8C%85/</id>
    <published>2021-09-07T10:18:07.583Z</published>
    <updated>2023-04-24T07:37:01.077Z</updated>
    
    <content type="html"><![CDATA[<p>使用第三方包的时候，经常需要修改内部源码来解决 bug 和实现效果，然而每次 yarn、npm install 之后，修改的代码又会被覆盖，让人抓狂，下面介绍一个好用的方法 👇</p><p>使用工具：<a href="https://links.jianshu.com/go?to=https://github.com/ds300/patch-package">patch-package</a></p><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>修改 package.json,添加<code> &quot;postinstall&quot;: &quot;patch-package&quot;</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;android&quot;</span>: <span class="string">&quot;react-native run-android&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;ios&quot;</span>: <span class="string">&quot;react-native run-ios&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;start&quot;</span>: <span class="string">&quot;react-native start&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;jest&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;lint&quot;</span>: <span class="string">&quot;eslint .&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;postinstall&quot;</span>: <span class="string">&quot;patch-package&quot;</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>执行 <code>yarn add patch-package postinstall-postinstall -D</code></p><p>修改第三方库后，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npx patch-package [package-name]</span><br><span class="line">或</span><br><span class="line">yarn patch-package [package-name]</span><br></pre></td></tr></table></figure><p>应用补丁</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn patch-package</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用第三方包的时候，经常需要修改内部源码来解决 bug 和实现效果，然而每次 yarn、npm install 之后，修改的代码又会被覆盖，让人抓狂，下面介绍一个好用的方法 👇&lt;/p&gt;
&lt;p&gt;使用工具：&lt;a href=&quot;https://links.jianshu.com/</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="react-native" scheme="https://liuios.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>yarn的常用命令</title>
    <link href="https://liuios.github.io/2021/09/07/yarn%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://liuios.github.io/2021/09/07/yarn%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-09-07T09:27:54.000Z</published>
    <updated>2023-04-24T07:37:00.970Z</updated>
    
    <content type="html"><![CDATA[<h4 id="yarn-安装"><a href="#yarn-安装" class="headerlink" title="yarn 安装"></a>yarn 安装</h4><p><code>npm i yarn -g</code></p><h4 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h4><p><code>yarn -v</code></p><h4 id="新建-package-json"><a href="#新建-package-json" class="headerlink" title="新建 package.json"></a>新建 package.json</h4><p><code>yarn init</code></p><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><p>通过 <code>yarn add</code> 添加依赖会更新 package.json 以及 yarn.lock 文件</p><h5 id="1-开发环境"><a href="#1-开发环境" class="headerlink" title="1.开发环境"></a>1.开发环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add &lt;packageName&gt; 依赖会记录在 package.json 的 dependencies 下 开发环境</span><br><span class="line"></span><br><span class="line">yarn add webpack@2.5 # yarn --save 是 yarn 默认的，默认记录在 package.json 中</span><br><span class="line"></span><br><span class="line">npm install webpack --save # npm</span><br></pre></td></tr></table></figure><h5 id="2-生产环境"><a href="#2-生产环境" class="headerlink" title="2.生产环境"></a>2.生产环境</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add &lt;packageName&gt; --dev 依赖会记录在 package.json 的 devDependencies 下 生产环境</span><br><span class="line"></span><br><span class="line">yarn add webpack --dev # yarn 简写 -D</span><br><span class="line"></span><br><span class="line">npm install webpack --save-dev # npm</span><br></pre></td></tr></table></figure><h5 id="3-全局"><a href="#3-全局" class="headerlink" title="3.全局"></a>3.全局</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn global add &lt;packageName&gt; 全局安装依赖</span><br><span class="line"></span><br><span class="line">yarn global add webpack # yarn</span><br><span class="line"></span><br><span class="line">npm install webpack -g # npm</span><br></pre></td></tr></table></figure><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yarn upgrade 用于更新包到基于规范范围的最新版本</span><br><span class="line"></span><br><span class="line">yarn upgrade # 升级所有依赖项，不记录在 package.json 中</span><br><span class="line"></span><br><span class="line">npm update # npm 可以通过 ‘--save|--save-dev’ 指定升级哪类依赖</span><br><span class="line"></span><br><span class="line">yarn upgrade webpack # 升级指定包</span><br><span class="line"></span><br><span class="line">npm update webpack --save-dev # npm</span><br><span class="line"></span><br><span class="line">yarn upgrade --latest # 忽略版本规则，升级到最新版本，并且更新 package.json</span><br></pre></td></tr></table></figure><h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn remove &lt;packageName&gt;</span><br><span class="line"></span><br><span class="line">yarn remove webpack # yarn</span><br><span class="line"></span><br><span class="line">npm uninstall webpack --save # npm 可以指定 --save | --save-dev</span><br></pre></td></tr></table></figure><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yarn 或者 yarn install</span><br><span class="line"></span><br><span class="line">yarn install # 或者 yarn 在 node_modules 目录安装 package.json 中列出的所有依赖</span><br><span class="line"></span><br><span class="line">npm install # npm</span><br><span class="line"></span><br><span class="line">yarn install 安装时，如果 node_modules 中有相应的包则不会重新下载 --force 可以强制重新下载安装</span><br><span class="line"></span><br><span class="line">yarn install --force # 强制下载安装</span><br><span class="line"></span><br><span class="line">npm install --force # npm</span><br></pre></td></tr></table></figure><h4 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yarn run 用来执行在 package.json 中 scripts 属性下定义的脚本</span><br><span class="line"></span><br><span class="line">// package.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;dev&quot;: &quot;node app.js&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;node app.js&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">yarn run dev # yarn 执行 dev 对应的脚本 node app.js</span><br><span class="line"></span><br><span class="line">npm run # npm</span><br><span class="line"></span><br><span class="line">yarn start # yarn</span><br><span class="line"></span><br><span class="line">npm start # npm</span><br><span class="line"></span><br><span class="line">与 npm 一样 可以有 yarn start 和 yarn test 两个简写的运行脚本方式</span><br></pre></td></tr></table></figure><h4 id="显示包信息"><a href="#显示包信息" class="headerlink" title="显示包信息"></a>显示包信息</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yarn info &lt;packageName&gt; 可以用来查看某个模块的最新版本信息</span><br><span class="line"></span><br><span class="line">yarn info webpack # yarn</span><br><span class="line"></span><br><span class="line">npm info webpack # npm</span><br><span class="line"></span><br><span class="line">yarn info webpack --json # 输出 json 格式</span><br><span class="line"></span><br><span class="line">npm info webpack --json # npm</span><br><span class="line"></span><br><span class="line">yarn info webpack readme # 输出 README 部分</span><br><span class="line"></span><br><span class="line">npm info webpack readme</span><br></pre></td></tr></table></figure><h4 id="列出所有依赖"><a href="#列出所有依赖" class="headerlink" title="列出所有依赖"></a>列出所有依赖</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yarn list</span><br><span class="line"></span><br><span class="line">yarn list # 列出当前项目的依赖</span><br><span class="line"></span><br><span class="line">npm list # npm</span><br><span class="line"></span><br><span class="line">yarn list --depth=0 # 限制依赖的深度</span><br><span class="line"></span><br><span class="line">sudo yarn global list # 列出全局安装的模块</span><br></pre></td></tr></table></figure><h4 id="管理-yarn-配置文件"><a href="#管理-yarn-配置文件" class="headerlink" title="管理 yarn 配置文件"></a>管理 yarn 配置文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">yarn coinfig</span><br><span class="line"></span><br><span class="line">yarn config set key value # 设置</span><br><span class="line"></span><br><span class="line">npm config set key value</span><br><span class="line"></span><br><span class="line">yarn config get key # 读取值</span><br><span class="line"></span><br><span class="line">npm config get key</span><br><span class="line"></span><br><span class="line">yarn config delete key # 删除</span><br><span class="line"></span><br><span class="line">npm config delete key</span><br><span class="line"></span><br><span class="line">yarn config list # 显示当前配置</span><br><span class="line"></span><br><span class="line">npm config list</span><br><span class="line"></span><br><span class="line">yarn config set registry https://registry.npm.taobao.org # 设置淘宝镜像</span><br><span class="line"></span><br><span class="line">npm config set registry https://registry.npm.taobao.org # npm</span><br></pre></td></tr></table></figure><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yarn cache</span><br><span class="line"></span><br><span class="line">sudo yarn cache list # 列出已缓存的每个包</span><br><span class="line"></span><br><span class="line">sudo yarn cache dir # 返回 全局缓存位置</span><br><span class="line"></span><br><span class="line">sudo yarn cache clean # 清除缓存</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;yarn-安装&quot;&gt;&lt;a href=&quot;#yarn-安装&quot; class=&quot;headerlink&quot; title=&quot;yarn 安装&quot;&gt;&lt;/a&gt;yarn 安装&lt;/h4&gt;&lt;p&gt;&lt;code&gt;npm i yarn -g&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;查看版本&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="yarn" scheme="https://liuios.github.io/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>iOS 开发解决dyld: Library not loaded: @rpath/xxx.framework/ </title>
    <link href="https://liuios.github.io/2021/09/07/iOS-%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3dyld-Library-not-loaded-rpath-xxx-framework/"/>
    <id>https://liuios.github.io/2021/09/07/iOS-%E5%BC%80%E5%8F%91%E8%A7%A3%E5%86%B3dyld-Library-not-loaded-rpath-xxx-framework/</id>
    <published>2021-09-07T09:06:20.000Z</published>
    <updated>2023-04-24T07:37:00.778Z</updated>
    
    <content type="html"><![CDATA[<p>最近使用百度人脸采集 sdk 时运行报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ld: Library not loaded: @rpath/xxx.framework/</span><br><span class="line">...</span><br><span class="line">reason: image not found</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/20210907171430.png"></p><p><img src="https://cdn.staticaly.com/gh/LiuIos/picBed@master/ttttt.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近使用百度人脸采集 sdk 时运行报错&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    <category term="技术" scheme="https://liuios.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="iOS" scheme="https://liuios.github.io/tags/iOS/"/>
    
  </entry>
  
</feed>
